"# RTD.GUI -- Default NEWFIRM RTD client GUI with message panel for trapping ",
"# debug output, or executing Tcl commands.",
"",
"# Reset the Widget Server.  Must be the first command so we restart correctly.",
"reset-server",
"",
"# Set the widgets and resources to be used in the base GUI.",
"set UIObjects(RTDStatus) { 	\\",
"	toplevel	Layout		controlPanel\\",
"        controlPanel    Group           menubarGroup\\",
"        controlPanel    Group           rtdGroup\\",
"        controlPanel    Group           smcGroup\\",
"        controlPanel    Group           statusGroup\\",
"\\",
"        controlPanel    Frame           statusFrame\\",
"        statusFrame     Label           statusStr\\",
"        controlPanel    Frame           diskmonFrame\\",
"        diskmonFrame    Layout          diskmonLayout\\",
"        diskmonLayout   Label           diskuseStr\\",
"        diskmonLayout   Frame           diskuseFrame\\",
"        diskuseFrame    Gterm           diskuse\\",
"\\",
"        menubarGroup    Layout          menubarLayout\\",
"        menubarLayout   MenuButton      fileButton\\",
"        menubarLayout   MenuButton      editButton\\",
"        menubarLayout   MenuButton      optsButton\\",
"        menubarLayout   Command         helpButton\\",
"        menubarLayout   Command         quitButton\\",
"\\",
"        rtdGroup     	Layout          rtdLayout\\",
"        rtdLayout       Group           rtdResGroup\\",
"        rtdLayout       Group           rtdOptsGroup\\",
"\\",
"        rtdOptsGroup	Layout		optsLayout\\",
"        optsLayout    	TextToggle      dispEnable\\",
"        optsLayout    	TextToggle      statEnable\\",
"        optsLayout    	TextToggle      hdrEnable\\",
"        optsLayout    	Label      	dframeLabel\\",
"        optsLayout   	MenuButton      dframeButton\\",
"        optsLayout    	Label      	stdimgLabel\\",
"        optsLayout   	MenuButton      stdimgButton\\",
"        optsLayout    	Label      	dpollLab\\",
"        optsLayout    	Frame      	dpollFrame\\",
"        dpollFrame    	AsciiText      	dpollInterval\\",
"\\",
"        rtdResGroup	Layout		resLayout\\",
"        resLayout    	Label      	expidLab\\",
"        resLayout    	Label      	expidVal\\",
"        resLayout    	Label      	obsidLab\\",
"        resLayout    	Label      	obsidVal\\",
"        resLayout    	Label      	seqnoLab\\",
"        resLayout    	Label      	seqnoVal\\",
"        resLayout    	Label      	meanLab\\",
"        resLayout    	Label      	meanVal\\",
"        resLayout    	Label      	sigmaLab\\",
"        resLayout    	Label      	sigmaVal\\",
"        resLayout    	Label      	minLab\\",
"        resLayout    	Label      	minVal\\",
"        resLayout    	Label      	maxLab\\",
"        resLayout    	Label      	maxVal\\",
"\\",
"\\",
"        smcGroup     	Layout          smcLayout\\",
"        smcLayout    	Label      	ctimeLab\\",
"        smcLayout    	Label      	ctimeVal\\",
"        smcLayout    	Label      	utimeLab\\",
"        smcLayout    	Label      	utimeVal\\",
"        smcLayout    	Label      	memKeyLab\\",
"        smcLayout    	Label      	memKeyVal\\",
"        smcLayout    	Label      	shmIDLab\\",
"        smcLayout    	Label      	shmIDVal\\",
"        smcLayout    	Label      	sizeLab\\",
"        smcLayout    	Label      	sizeVal\\",
"        smcLayout    	Label      	memUseLab\\",
"        smcLayout    	Label      	memUseVal\\",
"        smcLayout    	Label      	memAvailLab\\",
"        smcLayout    	Label      	memAvailVal\\",
"        smcLayout    	Label      	nprocLab\\",
"        smcLayout    	Label      	nprocVal\\",
"        smcLayout    	Label      	pageUseLab\\",
"        smcLayout    	Label      	pageUseVal\\",
"        smcLayout   	Command         initButton\\",
"        smcLayout   	Command         logButton\\",
"        smcLayout   	Command         updateButton\\",
"        smcLayout	Group           pageGroup\\",
"        smcLayout    	Label      	spollLab\\",
"        smcLayout    	Frame      	spollFrame\\",
"        spollFrame    	AsciiText      	spollInterval\\",
"\\",
"        pageGroup     	Layout          pageLayout\\",
"	pageLayout	Frame		ptabFrame\\",
"	pageLayout	MultiList	pageTable\\",
"\\",
"\\",
"        toplevel        Parameter       rtdstat\\",
"        rtdstat         Parameter       alert\\",
"        rtdstat         Parameter       initialize\\",
"        rtdstat         Parameter       disp_enable\\",
"        rtdstat         Parameter       stat_enable\\",
"        rtdstat         Parameter       hdrs_enable\\",
"        rtdstat         Parameter       disp_interval\\",
"        rtdstat         Parameter       smc_interval\\",
"        rtdstat         Parameter       stdimage\\",
"        rtdstat         Parameter       frame\\",
"        rtdstat         Parameter       rtdVal\\",
"        rtdstat         Parameter       smcVal\\",
"",
"",
"}",
"",
"",
"",
"set UIObjects(tcl_panel) { \\",
"        toplevel        TopLevelShell 	tcl_panel\\",
"        tcl_panel       Layout          tclLayout\\",
"        tclLayout       Group           tclCmdGroup\\",
"        tclCmdGroup     Layout          tclCmd\\",
"        tclCmd          Command         tclClear\\",
"        tclCmd          Command         tclExecute\\",
"        tclCmd          Command         tclDismiss\\",
"        tclLayout       Frame           tclFrame\\",
"        tclFrame        AsciiText       tclEntry\\",
"",
"}",
"",
"",
"set UIObjects(warning) { \\",
"        toplevel        TransientShell  warning\\",
"        warning         Layout          warn\\",
"        warn            Frame           warnFrame\\",
"        warnFrame       Layout          WFlayout\\",
"        WFlayout        Icon            warnIcon\\",
"        WFlayout        TextBox         warnText\\",
"        warn            Command         warnOk\\",
"        warn            Command         warnCancel\\",
"",
"}",
"",
"",
"",
"",
"",
"",
"set UIResources(RTDStatus) { \\",
"",
"    !#######################################################",
"    ! Define some global resources for the main menu panels.",
"    !#######################################################",
"    *beNiceToColormap:				false",
"    *allowShellResize:				true",
"",
"    *background:				#eeeee8",
"    *Text*background:				#eeeee8",
"    *Command.background:			#eeeee8",
"    *Label.background:				#eeeee8",
"    *MenuButton.background:			#eeeee8",
"    *Toggle.background:				#eeeee8",
"",
"    *Command.foreground:			black",
"    *Label.foreground:				black",
"    *MenuButton.foreground:			black",
"    *Toggle.foreground:				black",
"    *SimpleMenu*foreground:			black",
"",
"    *Command.highlightThickness:		2",
"    *Label.highlightThickness:			0",
"    *MenuButton.highlightThickness:		2",
"    *Toggle.highlightThickness:			2",
"",
"    *Label.borderWidth:				0",
"    *Label.shadowWidth:				0",
"    *Command.shadowWidth:			1",
"    *Toggle.shadowWidth:			1",
"    *MenuButton.shadowWidth:			1",
"",
"    *Arrow.width:				16",
"    *Arrow.height:				25",
"    *Arrow.foreground:				#ddddd8",
"    *Arrow.background:				#eeeee8",
"",
"    *TextToggle.frameType:   			chiseled",
"    *TextToggle.frameWidth:   			2",
"    *TextToggle.onIcon:   			square1s",
"    *TextToggle.offIcon:   			square0s",
"",
"    *SmeBSB.leftMargin:				10",
"",
"    *Group.shrinkToFit:				True",
"",
"    !------------------------------------------------------------",
"    ! Define resources to take advantage of the 3D scrollbar look",
"    !------------------------------------------------------------",
"    *Scrollbar*background:			#eeeee8",
"    *Scrollbar*width:				15",
"    *Scrollbar*height:				15",
"    *Scrollbar*shadowWidth:			2",
"    *Scrollbar*cursorName:			top_left_arrow",
"    *Scrollbar*pushThumb:			true",
"",
"    !-------------------------------------",
"    ! Define new fonts to use for the GUI.",
"    !-------------------------------------",
"    *font:					7x13bold",
"    *Command.font:      			7x13bold",
"    *MenuButton.font:   			7x13bold",
"    *Toggle.font:       			7x13bold",
"    *Label.font:        			7x13bold",
"    *TextToggle.font:   			7x13bold",
"    *SimpleMenu*font:				7x13bold",
"",
"",
"    !#################################",
"    ! Define the main monitor window. ",
"    !#################################",
"    *rtdStatus.title:                           NEWFIRM RTD/Status Client",
"    *RTDStatus.title:                           NEWFIRM RTD/Status Client",
"    *RTDStatus.geometry:                        +0+0",
"    *RTDStatus.width:                           640",
"    *RTDStatus.height:                          625",
"",
"    !*controlPanel*font:                         7x13bold",
"    *controlPanel.geometry:                     =564x200+0+5",
"    *controlPanel.frameWidth:                   4",
"    *controlPanel.highlightThickness:           0",
"    *controlPanel.highlightThickness:           0",
"    *controlPanel.frameType:                    chiseled",
"    *controlPanel.innerOffset:                  5",
"    *controlPanel.outerOffset:                  5",
"    *controlPanel.layout: vertical { \\",
"        -1 \\",
"        menubarGroup < +inf * > \\",
"        7 \\",
"        rtdGroup < +inf * -inf > \\",
"        5 \\",
"        smcGroup < +inf * -inf > \\",
"        -2 \\",
"        horizontal { \\",
"            5 \\",
"            statusFrame  < +inf * > \\",
"            diskmonFrame  \\",
"            5 \\",
"        } \\",
"        -2 \\",
"    }",
"    *statusFrame.frameWidth:                    2",
"    *statusFrame.frameType:                     chiseled",
"    *statusStr.label:                           Ready....",
"    *statusStr.justify:                         Center",
"",
"",
"    *diskmonFrame.frameWidth:                   2",
"    *diskmonFrame.frameType:                    chiseled",
"    *diskmonLayout.layout: horizontal {\\",
"        diskuseStr < +inf -inf * > 2 \\",
"        diskuseFrame < +inf -inf * > \\",
"    }",
"    *diskmonLayout*borderWidth:                 0",
"    *diskuseStr.width:                          120",
"    *diskuseStr.label:                          Disk Usage:    ",
"    *diskuseStr.justify:                        left",
"    *diskuseFrame.frameWidth:                   2",
"    *diskuseFrame.frameType:                    sunken",
"    *diskuse.width:                             100",
"    *diskuse.height:                            15",
"",
"",
"",
"    !-----------------------------",
"    ! Menubar widget resources",
"    !-----------------------------",
"    *menubarGroup.borderWidth:                  0",
"    *menubarGroup.outerOffset:                  0",
"    *menubarGroup.innerOffset:                  5",
"    *menubarGroup.label:",
"    *menubarGroup*frameType:                    raised",
"    *menubarGroup*frameWidth:                   2",
"    *menubarGroup*shadowWidth:                  2",
"    *menubarGroup.location:                     0 0 460 40",
"    *menubarLayout.borderWidth:                 0",
"    *menubarLayout.layout: horizontal { \\",
"        -1 \\",
"        fileButton 3 < -3 > \\",
"        editButton 3 < -3 > \\",
"        optsButton 5 < +inf -inf > \\",
"        helpButton 3 < -3 > \\",
"        quitButton \\",
"        -1 \\",
"    }",
"    *fileButton.label:                          File",
"    *fileButton.menuName:                       fileMenu",
"    *editButton.label:                          Edit",
"    *editButton.menuName:                       editMenu",
"    *optsButton.label:                          Options",
"    *optsButton.menuName:                       optsMenu",
"    *helpButton.label:                          Help",
"    *quitButton.label:                          Quit",
"    *quitButton.font:                           7x13bold",
"",
"    *editButton.sensitive:			False",
"    *optsButton.sensitive:			False",
"    *helpButton.sensitive:			False",
"",
"",
"",
"    !-----------------------------------",
"    ! RTD Status information resources",
"    !-----------------------------------",
"    *rtdGroup.borderWidth:                   	0",
"    *rtdGroup.outerOffset:                   	8",
"    *rtdGroup.innerffset:                    	8",
"    *rtdGroup.label:                         	Real-Time Display",
"    *rtdGroup*Frame.frameType:               	sunken",
"    *rtdGroup*Frame.frameWidth:              	2",
"    *rtdGroup*borderWidth:                   	0 ",
"    *rtdGroup*Text*displayCaret:             	False",
"    *rtdGroup*Text*scrollVertical:           	never",
"    *rtdGroup*Text*scrollHorizontal:         	never",
"    *rtdGroup*Text*editType:                 	edit",
"    *rtdGroup*Text*height:                   	22",
"    *rtdGroup*TextToggle*highlightColor:     	yellow",
"    *rtdGroup.location:                      	0 0 564 200",
"    *rtdGroup*Label.justify:                 	left",
"    *rtdGroup*Label.height:                  	22",
"    *rtdLayout.layout: vertical { \\",
"        3 \\",
"        rtdOptsGroup < +inf * -inf > \\",
"        -8 \\",
"        rtdResGroup < +inf * -inf > \\",
"        1 \\",
"     }",
"",
"",
"",
"    !-----------------------------",
"    ! RTD Options resources",
"    !-----------------------------",
"    *rtdOptsGroup.borderWidth:                  0",
"    *rtdOptsGroup.outerOffset:                  8",
"    *rtdOptsGroup.innerOffset:                  8",
"    *rtdOptsGroup.label:			Options",
"    *rtdOptsGroup*Frame.frameType:              sunken",
"    *rtdOptsGroup*Frame.frameWidth:             2",
"    *rtdOptsGroup*frameType:                    chiseled",
"    *rtdOptsGroup*frameWidth:                   2",
"    *rtdOptsGroup*Command.shadowWidth:       	0",
"    *rtdOptsGroup*MenuButton.shadowWidth:       2",
"    *rtdOptsGroup*MenuButton.width:       	120",
"    *rtdOptsGroup*TextToggle.frameType:         raised",
"    *rtdOptsGroup*Text*background:              black",
"    *rtdOptsGroup*Text*foreground:              yellow2",
"    *rtdOptsGroup*shadowWidth:                  0",
"    *rtdOptsGroup.location:                     0 0 460 120",
"    *rtdOptsLayout.borderWidth:                 3",
"    *optsLayout.layout: vertical { \\",
"        2 \\",
"        horizontal { \\",
"            8 \\",
"	    dframeLabel 3 dframeButton \\",
"            8 \\",
"	    stdimgLabel 3 stdimgButton \\",
"            3 < +inf > \\",
"            dpollLab 5 dpollFrame \\",
"            8 \\",
"        } \\",
"        horizontal { \\",
"	    dispEnable < +inf * > 5 \\",
"	    statEnable < +inf * > 5 \\",
"	    hdrEnable  < +inf * > 5 \\",
"        } \\",
"    }",
"    *dispEnable.label:               		\\ Display Enable",
"    *dispEnable.on:                  		True",
"    *dispEnable.location:            		0 0 135 24",
"    *dispEnable.alignment:           		left",
"",
"    *statEnable.label:               		\\ Stats Enable",
"    *statEnable.on:                  		True",
"    *statEnable.location:            		0 0 135 24",
"    *statEnable.alignment:           		left",
"",
"    *hdrEnable.label:               		\\ Show Headers",
"    *hdrEnable.on:                  		True",
"    *hdrEnable.location:            		0 0 135 24",
"    *hdrEnable.alignment:           		center",
"    *hdrEnable.sensitive:			False",
"",
"    *dframeLabel.label:               		Display Frame:",
"    *dframeLabel.justify:               	right",
"    *dframeButton.label:               		1",
"    *dframeButton.menuName:                     frameMenu",
"    *dframeButton.shadowWidth:               	0",
"    *dframeButton.location:            		0 0 135 24",
"    *resOptsGroup.optsLayout.dframeButton.width:       	120",
"",
"    *stdimgLabel.label:               		Frame Buffer:",
"    *stdimgLabel.justify:               	right",
"    *stdimgButton.label:               		imt4400",
"    *stdimgButton.menuName:                     fbMenu",
"    *stdimgButton.shadowWidth:               	0",
"    *resOptsGroup.optsLayout.stdimgButton.width:       	120",
"",
"    *dpollLab.label:	   			RTD Polling Interval: ",
"    *dpollInterval*string:              	1",
"    *dpollInterval*height:              	22",
"    *dpollInterval*width:               	36",
"    *resOptsGroup.optsLayout.dpollInterval.background:		black",
"    *resOptsGroup.optsLayout.dpollInterval.foreground:		yellow2",
"    *resOptsGroup.optsLayout.dpollInterval.editType:   		edit",
"",
"    !-----------------------------",
"    ! RTD Results resources",
"    !-----------------------------",
"    *rtdResGroup.borderWidth:                  	0",
"    *rtdResGroup.outerOffset:                  	8",
"    *rtdResGroup.innerOffset:                  	8",
"    *rtdResGroup.label:",
"    *rtdResGroup*Frame.frameType:              	sunken",
"    *rtdResGroup*Frame.frameWidth:             	2",
"    *rtdResGroup*frameType:                    	chiseled",
"    *rtdResGroup*frameWidth:                   	2",
"    *rtdResGroup*shadowWidth:                  	0",
"    *rtdResGroup*Label.background:              black",
"    *rtdResGroup*Label.foreground:              cyan3",
"    *rtdResGroup*Label.innerOffset:             3",
"    *rtdResGroup.location:                     	0 0 460 110",
"    *rtdResLayout*Label.background:		black",
"    *rtdResLayout*background:			black",
"    *rtdResLayout.borderWidth:                 	3",
"    *resLayout*background:			black",
"    *resLayout.layout: vertical { \\",
"        3 \\",
"        horizontal { \\",
"	    3 \\",
"    	    expidLab 3 expidVal < +inf * -inf > \\",
"	    3 \\",
"    	    obsidLab 3 obsidVal < +inf * -inf > \\",
"	    3 < +inf >\\",
"    	    seqnoLab 3 seqnoVal < +inf * -inf > \\",
"	    3 \\",
"        } \\",
"        3 \\",
"        horizontal { \\",
"    	     meanLab 3 meanVal  < +inf * >  \\",
"    	    sigmaLab 3 sigmaVal < +inf * >  \\",
"    	      minLab 3 minVal   < +inf * >  \\",
"    	      maxLab 3 maxVal   < +inf * >  \\",
"        } \\",
"        3 \\",
"    }",
"    *expidLab.label:				ExpID:",
"    *expidLab.justify:				left",
"    *expidLab.font:				7x13bold",
"",
"    *expidVal.label:				--------------",
"    *expidVal.justify:				left",
"    *expidVal.font:				7x13",
"",
"    *obsidLab.label:				ObSetID:",
"    *obsidLab.justify:				left",
"    *obsidLab.font:				7x13bold",
"",
"    *obsidVal.label:				--------------",
"    *osbidVal.justify:				left",
"    *osbidVal.font:				7x13",
"",
"    *seqnoLab.label:				Seq Number:",
"    *seqnoLab.justify:				left",
"    *seqnoLab.font:				7x13bold",
"",
"    *seqnoVal.label:				----",
"    *seqnoVal.justify:				left",
"    *seqnoVal.font:				7x13",
"    *seqnoVal.width:				35",
"",
"    *meanLab.label:				Pixel Statistics:  Mean:",
"    *meanLab.justify:				left",
"    *meanLab.font:				7x13bold",
"",
"    *meanVal.label:",
"    *meanVal.justify:				left",
"    *meanVal.font:				7x13",
"",
"    *sigmaLab.label:				Sigma:",
"    *sigmaLab.justify:				left",
"    *sigmaLab.font:				7x13bold",
"",
"    *sigmaVal.label:",
"    *sigmaVal.justify:				left",
"    *sigmaVal.font:				7x13",
"",
"    *minLab.label:				Pix Min:",
"    *minLab.justify:				left",
"    *minLab.font:				7x13bold",
"",
"    *minVal.label:",
"    *minVal.justify:				left",
"    *minVal.font:				7x13",
"",
"    *maxLab.label:				Pix Max:",
"    *maxLab.justify:				left",
"    *maxLab.font:				7x13bold",
"",
"    *maxVal.label:",
"    *maxVal.justify:				left",
"    *maxVal.font:				7x13",
"",
"    *rtdResGroup.resLayout.expidLab.foreground:		yellow3",
"    *rtdResGroup.resLayout.obsidLab.foreground:		yellow3",
"    *rtdResGroup.resLayout.seqnoLab.foreground:		yellow3",
"    *rtdResGroup.resLayout.meanLab.foreground:		yellow3",
"    *rtdResGroup.resLayout.sigmaLab.foreground:		yellow3",
"    *rtdResGroup.resLayout.minLab.foreground:		yellow3",
"    *rtdResGroup.resLayout.maxLab.foreground:		yellow3",
"",
"",
"",
"    !----------------------------------",
"    ! SMC Status information resources",
"    !----------------------------------",
"    *smcGroup.borderWidth:                   	0",
"    *smcGroup.outerOffset:                   	5",
"    *smcGroup.innerffset:                    	5",
"    *smcGroup.label:                         	Shared Memory Cache Status",
"    *smcGroup*Frame.frameType:               	sunken",
"    *smcGroup*Frame.frameWidth:              	2",
"    *smcGroup*borderWidth:                   	0",
"    *smcGroup*Command.shadowWidth:              2",
"    *smcGroup*Label.frameType:                  sunken",
"    *smcGroup*Label.shadowWidth:                0",
"    *smcGroup*Label.background:                 black",
"    *smcGroup*Label.foreground:                 cyan3",
"    *smcGroup*Label.innerOffset:                3",
"    *smcGroup*Label.height:                  	27",
"    *smcGroup*Command.background:               #eeeee8",
"    *smcGroup*Command.foreground:               black",
"    *smcGroup.innerOffset:                  	5",
"    *smcGroup*Text*displayCaret:             	False",
"    *smcGroup*Text*scrollVertical:           	never",
"    *smcGroup*Text*scrollHorizontal:         	never",
"    *smcGroup*Text*editType:                 	edit",
"    *smcGroup*Text*height:                   	22",
"    *smcGroup*TextToggle*highlightColor:     	yellow",
"    *smcGroup.location:                      	0 0 564 325",
"    *smcLayout*background:			black",
"    *smcLayout*foreground:			yellow3",
"    *smcLayout.layout: vertical { \\",
"        8 \\",
"        horizontal { \\",
"	    8 \\",
"            ctimeLab 3 ctimeVal 1 < +inf > \\",
"            utimeLab 3 utimeVal \\",
"	    8 \\",
"        } \\",
"        horizontal { \\",
"	    8 \\",
"            memKeyLab 3 memKeyVal 1 < +inf > \\",
"	    shmIDLab  3 shmIDVal 1 < +inf > \\",
"	    sizeLab   3 sizeVal \\",
"	    8 \\",
"        } \\",
"        horizontal { \\",
"	    8 \\",
"            memUseLab   3   memUseVal 1 < +inf > \\",
"            memAvailLab 3 memAvailVal 1 < +inf > \\",
"	    nprocLab    3    nprocVal 1 < +inf > \\",
"            pageUseLab  3  pageUseVal \\",
"	    8 \\",
"        } \\",
"	12 \\",
"        horizontal { \\",
"            pageGroup < +inf * -inf > \\",
"        } \\",
"        -1 \\",
"        horizontal { \\",
"            8 \\",
"            spollLab 5 spollFrame \\",
"	    5 < +inf > \\",
"	    logButton  \\",
"            2 \\",
"	    initButton  \\",
"            2 \\",
"	    updateButton  \\",
"            8 \\",
"        } \\",
"        5 \\",
"     }",
"    *ctimeLab.label:			Created:\\ ",
"    *ctimeLab.justify:			left",
"    *ctimeLab.font:			7x13bold",
"    *ctimeVal.label:			------------------------",
"    *ctimeVal.justify:			left",
"    *ctimeVal.font:			7x13",
"",
"    *utimeLab.label:			Last Updated:\\ ",
"    *utimeLab.justify:			right",
"    *utimeLab.font:			7x13bold",
"    *utimeVal.label:			------------------------",
"    *utimeVal.justify:			left",
"    *utimeVal.font:			7x13",
"",
"    *memKeyLab.label:			MemKey:\\ ",
"    *memKeyLab.justify:			left",
"    *memKeyLab.font:			7x13bold",
"    *memKeyVal.label:			---------",
"    *memKeyVal.justify:			left",
"    *memKeyVal.font:			7x13",
"",
"    *shmIDLab.label:			ShmID:\\ ",
"    *shmIDLab.justify:			left",
"    *shmIDLab.font:			7x13bold",
"    *shmIDVal.label:			---------",
"    *shmIDVal.justify:			left",
"    *shmIDVal.font:			7x13",
"",
"    *sizeLab.label:			SMC Size:\\ ",
"    *sizeLab.justify:			right",
"    *sizeLab.font:			7x13bold",
"    *sizeVal.label:			------- bytes",
"    *sizeVal.justify:			left",
"    *sizeVal.font:			7x13",
"",
"    *memUseLab.label:			Mem Used:\\ ",
"    *memUseLab.justify:			left",
"    *memUseLab.font:			7x13bold",
"    *memUseVal.label:			---- Mb",
"    *memUseVal.justify:			left",
"    *memUseVal.font:			7x13",
"",
"    *memAvailLab.label:			Avail:\\ ",
"    *memAvailLab.justify:		left",
"    *memAvailLab.font:			7x13bold",
"    *memAvailVal.label:			---- Mb",
"    *memAvailVal.justify:		left",
"    *memAvailVal.font:			7x13",
"",
"    *nprocLab.label:			NumProcs:\\ ",
"    *nprocLab.justify:			center",
"    *nprocLab.font:			7x13bold",
"    *nprocVal.label:			--",
"    *nprocVal.justify:			left",
"    *nprocVal.font:			7x13",
"",
"    *pageUseLab.label:			Segs Used:\\ ",
"    *pageUseLab.justify:		right",
"    *pageUseLab.font:			7x13bold",
"    *pageUseVal.label:			---- of 2048",
"    *pageUseVal.justify:		left",
"    *pageUseVal.font:			7x13",
"",
"    *spollLab.label:	   		SMC Polling Interval: ",
"    *spollInterval*string:              3",
"    *spollInterval*height:              22",
"    *spollInterval*width:               36",
"    *spollInterval*Text*editType:       edit",
"    *initButton.label:			Initialize ",
"    *updateButton.label:		Update ",
"    *logButton.label:			Show Log",
"    *logButton.sensitive:		False",
"",
"    *smcGroup.smcLayout.ctimeLab.foreground:		yellow3",
"    *smcGroup.smcLayout.utimeLab.foreground:		yellow3",
"    *smcGroup.smcLayout.memKeyLab.foreground:		yellow3",
"    *smcGroup.smcLayout.shmIDLab.foreground:		yellow3",
"    *smcGroup.smcLayout.sizeLab.foreground:		yellow3",
"    *smcGroup.smcLayout.memUseLab.foreground:		yellow3",
"    *smcGroup.smcLayout.memAvailLab.foreground:		yellow3",
"    *smcGroup.smcLayout.nprocLab.foreground:		yellow3",
"    *smcGroup.smcLayout.pageUseLab.foreground:		yellow3",
"    *smcGroup.smcLayout.spollLab.foreground:		yellow3",
"",
"    !-----------------------------",
"    ! Segment/Page List resources",
"    !-----------------------------",
"    *pageGroup.borderWidth:                  0",
"    *pageGroup.outerOffset:                  8",
"    *pageGroup.innerOffset:                  8",
"    *pageGroup.label:			     Segment Log",
"    *pageGroup*Frame.frameType:              sunken",
"    *pageGroup*Frame.frameWidth:             2",
"    *pageGroup*frameType:                    chiseled",
"    *pageGroup*frameWidth:                   2",
"    *pageGroup*shadowWidth:                  2",
"    *pageGroup.location:                     0 0 460 400",
"    *pageLayout.borderWidth:                 3",
"    *pageLayout.layout: horizontal { \\",
"        3 \\",
"        ptabFrame \\",
"        3 \\",
"    }",
"",
"",
"",
"",
"    !-----------------------------------------------------",
"    !  Menu resources giving a shadow effect on dividers.",
"    !-----------------------------------------------------",
"    *RTDStatus*SimpleMenu*background:			gray75",
"    *RTDStatus*SimpleMenu*foreground:			black",
"    *RTDStatus*SimpleMenu.borderWidth:			1",
"    *RTDStatus*SimpleMenu.menuLabel.foreground:		black",
"    *RTDStatus*SimpleMenu.line1.foreground:		gray61",
"    *RTDStatus*SimpleMenu.line2.foreground:		gray91",
"    *RTDStatus*SimpleMenu.line3.foreground:		gray61",
"    *RTDStatus*SimpleMenu.line4.foreground:		gray91",
"    *RTDStatus*SimpleMenu.line5.foreground:		gray61",
"    *RTDStatus*SimpleMenu.line6.foreground:		gray91",
"    *RTDStatus*SimpleMenu.line7.foreground:		gray61",
"    *RTDStatus*SimpleMenu.line8.foreground:		gray91",
"    *RTDStatus*SimpleMenu.line9.foreground:		gray61",
"    *RTDStatus*SimpleMenu.line10.foreground:		gray91",
"    *RTDStatus*SimpleMenu.line11.foreground:		gray61",
"    *RTDStatus*SimpleMenu.line12.foreground:		gray91",
"    *RTDStatus*SimpleMenu.line13.foreground:		gray61",
"    *RTDStatus*SimpleMenu.line14.foreground:		gray91",
"    *RTDStatus*SimpleMenu.line15.foreground:		gray61",
"",
"",
"}",
"",
"set UIActCallbacks(RTDStatus)   { }",
"set UIDeactCallbacks(RTDStatus) { }",
"",
"",
"",
"",
"set UIResources(tcl_panel) { \\",
"",
"    !--------------------------------",
"    ! Define a debug Tcl shell.",
"    !--------------------------------",
"    *tcl_panel.width:                           550",
"    *tcl_panel.height:                          180",
"    *tcl_panel.title:                           Debug TCL Command Entry",
"    *tclLayout*borderWidth:                     0",
"    *tclLayout*Frame.frameType:                 sunken",
"    *tclLayout*Frame.frameWidth:                2",
"    *tclLayout.layout:  vertical { \\",
"        0 < +0 -0 > \\",
"        tclCmdGroup   < +inf -inf * > \\",
"        tclFrame < +inf -inf * +inf -inf> \\",
"        0 < +0 -0 > \\",
"    }",
"    *tclEntry*foreground:                       black",
"    *tclEntry*editType:                         edit",
"    *tclEntry*type:                             string",
"    *tclEntry*font:                             7x13",
"    *tclEntry*scrollVertical:                   Always",
"    *tclEntry*scrollHorizontal:                 whenNeeded",
"",
"    *tclCmdGroup.label:         ",
"    *tclCmdGroup.outerOffset:                   0",
"    *tclCmdGroup.innerOffset:                   0",
"    *tclCmd.layout: vertical { \\",
"        5 \\",
"        horizontal { \\",
"            5 \\",
"            tclClear   3 \\",
"            tclExecute   \\",
"            10 < +inf -10>    \\",
"            tclDismiss   \\",
"            5 \\",
"        } \\",
"        5 \\",
"    }",
"    *tclClear.label:                            Clear",
"    *tclExecute.label:                          Execute",
"    *tclDismiss.label:                          Dismiss",
"}",
"",
"",
"set UIResources(warning) { \\",
"",
"    ! ---------------------",
"    ! WARNING dialog.",
"    ! ---------------------",
"    *warning.geometry:                          +400+300",
"    *warning*borderWidth:                       0",
"    *warning*TextBox.frameWidth:                0",
"",
"    *warn.layout: vertical { \\",
"        5 < -5  > \\",
"        horizontal { 5 warnFrame < +inf * +inf > 5 } \\",
"        5 < -5  > \\",
"        horizontal { \\",
"            10 \\",
"            warnOk < +inf * > \\",
"            5 < +inf -5 > \\",
"            warnCancel < +inf * > \\",
"            10 \\",
"        } \\",
"        5 < -5  > \\",
"    }",
"    *warnOk.label:                              Okay",
"    *warnCancel.label:                          Cancel",
"",
"    *WFlayout.layout: horizontal { \\",
"        5 < -5  > \\",
"        vertical { 5 < +inf -5 > warnIcon 5 < +inf -5 > } \\",
"        5 < -5  > \\",
"        warnText < +inf -inf *  +inf -inf > \\",
"        5 < -5  > \\",
"    }",
"",
"    *warnLabel.label:                           Warning",
"    *warnLabel.width:                           300",
"    *warnLabel.height:                          20",
"    *warnFrame.frameType:                       sunken",
"    *warnFrame.frameWidth:                      2",
"    *warnIcon.location:                         0 0 40 40",
"    *warnIcon.image:                            WARNING",
"    *warnText.label:                            generic warning text",
"    *warnText.width:                            270",
"    *warnText.height:                           60",
"    *warnText.background:                       gray77",
"}",
"",
"",
"",
"",
"",
"################################################################################",
"# Global Variables.",
"################################################################################",
"",
"set smcTime		0		;# polling timers",
"set smcTimerId		0",
"set rtdTime		0",
"set rtdTimerId		0",
"    ",
"set rtd_seqno		0		;# RTD sequence number",
"",
"",
"set configPath		\"./\"		;# config file path",
"set defaultConfig	none		;# startup default configuration",
"",
"set Module(arg)		    	{}	;# user configuration files",
"set config(task)	    	{}	;# task configuration array",
"set config(task,widget)	    	{}	;# widget configuration array",
"set config(task,Realized)   	{}	;# module has been realized",
"set config(task,Activated)  	{}	;# module has been activated",
"",
"set debug 		    	0	;# it ain't the same w/out a debug flag",
"set err_msgs		    	\"\"",
"",
"",
"# Constants",
"#------------",
"",
"set UbarHeight		    30		;# user menubar height",
"",
"",
"",
"################################################################################",
"# Bootstrap procedures used during the startup process.",
"################################################################################",
"",
"# Given the max number of widgets we'll be using create the object definition",
"# for the GUI we can append to the UIObjects string before startup.",
"",
"proc BuildObjects args {",
"    global UIObjects UIResources",
"",
"    set widgets \"\"",
"",
"    # Append the objects to the object list.",
"    append UIObjects(RTDStatus) $widgets",
"}",
"",
"",
"# Load the .dhs_rc config file.",
"proc LoadConfigFile args {",
"    global dhs_rc defaultConfig configPath err_msgs",
"",
"    # If we have a .newfirm file use it for the startup.",
"    # the GUI resource values",
"    set file $dhs_rc",
"    if { [file exists $file] } {",
"	if { [ catch {source $file} err] } {",
"	    print \".dhs_rc file read error\\n$err\"",
"	    append err_msgs \".dhs_rc file read error\\n$err\"",
"	}",
"    }",
"}",
"",
"# Read the named UI configuration file.",
"proc ReadConfigFile { fname args } {",
"   ",
"    set fd [ open $fname r ]",
"",
"    # Read the config file a line at a time so we can strip comments and",
"    # blank lines to make the parsing easier.",
"    set uidef \"\"",
"    while { ! [ eof $fd ] } {",
"	gets $fd line",
"",
"	# Strip any comments and blank lines.",
"	if { [ string first \"#\" $line ] >= 0 } {",
"	    set line [ string range $line 0 [ expr [string first \"#\" $line]-1] ]",
"	    set line [ string trimright $line ]",
"	}",
"	if { $line == \"\" } { continue } ",
"",
"	# Append the line to the output description.",
"	set uidef [ format \"%s\\n%s\" $uidef $line ]",
"    }",
"",
"    close $fd",
"    return $uidef",
"}",
"",
"# Scan the config directories getting a list of User-UI files.",
"proc ScanConfigDirs args {",
"    global Module configPath UIObjects UIResources UIActCallbacks",
"    global gvar err_msgs",
"",
"    set path [ format \"./:%s\" $configPath ]",
"    foreach dir	[ split $path : ] { ",
"	set ui_files [ glob -nocomplain [ format \"%s/*.ui\" $dir ] ]",
"	foreach fil $ui_files {",
"	    set task [ file tail [ file rootname $fil ] ]",
"	    if { ! [info exists Module($task) ] } {",
"	        set Module($task) [ format \"%s\" $fil ]",
"",
"		# Open the UI file to set any objects/resources defined.",
"		# This will also pick up any callback procedures declared.",
"		set text [ ReadConfigFile $fil ]",
"",
"		if {[catch { eval $text } err] } {",
"		    print \"'${task}.ui' file bootstrap error\\n'$err'\"",
"	    	    append err_msgs \".xgtermrc file read error\\n$err\"",
"		} else {",
"		    if {[info exists Objects]} {",
"			set UIObjects($task) $Objects",
"			unset Objects",
"		    }",
"		    if {[info exists Resources]} {",
"			set UIResources($task) $Resources",
"			unset Resources",
"		    }",
"		    if {[info exists ActivateCallbacks]} {",
"			set UIActCallbacks($task) $ActivateCallbacks",
"			unset ActivateCallbacks",
"		    }",
"		    if {[info exists DeactivateCallbacks]} {",
"			set UIDeactCallbacks($task) $DeactivateCallbacks",
"			unset DeactivateCallbacks",
"		    }",
"		}",
"	    }",
"	}",
"	set ui_files \"\"",
"    }",
"}",
"",
"#==============================================================================",
"# Initialize the widget tree.",
"#==============================================================================",
"",
"proc InitWidgetTree args {",
"    global UIObjects UIResources",
"",
"    # Initialize the string with the base GUI objects/resources.",
"    set guiResources \\",
"        [format \"RTDStatus*objects:%s\\n%s\" \\",
"	    $UIObjects(RTDStatus) $UIResources(RTDStatus)]",
"",
"    # Add a new objects description for each of the plugins found so we can",
"    # create them by name later rather that with the defaults.",
"    foreach task [array names UIObjects] {",
"	if {$task != \"RTDStatus\"} {",
"	    set guiResources \\",
"	        [ format \"%s\\n\\n*%s_objects:%s\\n%s\" \\",
"		    $guiResources $task \\",
"		    $UIObjects($task) $UIResources($task) ]",
"	}",
"    }",
"",
"    # Define all of the UI objects and resources.",
"    appInitialize rtdStatus RTDStatus $guiResources",
"}",
"",
"#==============================================================================",
"# Realize a plugin module, i.e. create it's objects and attach callbacks.",
"# We only do this once and set a flag to indicate the objects have been ",
"# created so we don't do it on subsequent realizations.",
"#==============================================================================",
"",
"proc Realize { module args } {",
"    global config UIActCallbacks UIObjects",
"",
"",
"    if { [info exists config($module,Realized)] } {",
"	return",
"    }",
"",
"    # Create any widgets for the module.  We only do this once and set a",
"    # flag to indicate the objects have been created so we don't do it on",
"    # subsequent realizations.",
"    if { [info exists UIObjects($module)] } {",
"        createObjects [format \"%s_objects\" $module]",
"        reset-server",
"    }",
"",
"    # Add any callback that are defined for procedures in the module.",
"    if { [info exists UIActCallbacks($module)] } {",
"	foreach cb $UIActCallbacks($module) {",
"	    eval $cb",
"	}",
"    }",
"",
"    set config($module,Realized) 1",
"}",
"",
"",
"",
"",
"################################################################################",
"# Bootstrap the GUI.",
"################################################################################",
"",
"# Load the .xgtermrc config file.",
"#LoadConfigFile",
"",
"# Scan the config directories getting a list of User-UI files.",
"#ScanConfigDirs",
"",
"# Create the userbar widgets based on the number of widgets defined.",
"BuildObjects",
"",
"# Initialize the widget tree.",
"InitWidgetTree",
"",
"# Realize the plugins with widgets needed for the base GUI.  All other ",
"# modules have already loaded their procedures so we can automatically",
"# access e.g. debug print routines at this point.",
"Realize tcl_panel",
"Realize warning",
"#Realize log",
"",
"",
"################################################################################",
"# Crank it up...",
"################################################################################",
"",
"# Create the objects and initialize the Gterm widgets in the main GUI.",
"# We will create the objects for plugin modules when they are realized to",
"# speed startup times.",
"",
"createObjects",
"send diskuse setGterm ; send diskuse activate",
"",
"",
"# Setup the close-window button",
"createBitmap CloseBM 16 16 {",
"    0x00,0x00,0xfc,0x3f,0x02,0x60,0x02,0x50,0xf2,0x6f,0xf2,0x5f,0xf2,0x6f,0xf2,",
"    0x5f,0xf2,0x6f,0xf2,0x5f,0xf2,0x6f,0xf2,0x5f,0xaa,0x6a,0x54,0x55,0xfc,0x3f,",
"    0x00,0x00}",
"",
"",
"",
"################################################################################",
"# Menu Definitions",
"################################################################################",
"",
"createMenu fileMenu fileButton {",
"    {\"File Options\" 	f.title     		  	}",
"    {			f.dblline   		  	}",
"    {\"Debug Tcl Shell\"	f.exec    { tclOpen	 	} }",
"    {			f.dblline		  	}",
"    {\"Help\"  		f.exec    { Help 		} }",
"    {\"Quit\"  		f.exec    { Quit 		} }",
"}",
"",
"createMenu frameMenu dframeButton {",
"    {\"1\"  	f.exec    { send client setOption frame 1	} }",
"    {\"2\"  	f.exec    { send client setOption frame 2	} }",
"    {\"3\"  	f.exec    { send client setOption frame 3	} }",
"    {\"4\"  	f.exec    { send client setOption frame 4	} }",
"    {\"5\"  	f.exec    { send client setOption frame 5	} }",
"    {\"6\"  	f.exec    { send client setOption frame 6	} }",
"    {\"7\"  	f.exec    { send client setOption frame 7	} }",
"    {\"8\"  	f.exec    { send client setOption frame 8	} }",
"    {\"9\"  	f.exec    { send client setOption frame 9	} }",
"    {\"10\"  	f.exec    { send client setOption frame 10	} }",
"    {\"11\"  	f.exec    { send client setOption frame 11	} }",
"    {\"12\"  	f.exec    { send client setOption frame 12	} }",
"    {\"13\"  	f.exec    { send client setOption frame 13	} }",
"    {\"14\"  	f.exec    { send client setOption frame 14	} }",
"    {\"15\"  	f.exec    { send client setOption frame 15	} }",
"    {\"16\"  	f.exec    { send client setOption frame 16	} }",
"}",
"createMenu fbMenu stdimgButton {",
"    {\"imt4400\"  f.exec    { send client setOption stdimg 42	} }",
"    {\"imt4096\"  f.exec    { send client setOption stdimg  6	} }",
"    {\"imt2200\"  f.exec    { send client setOption stdimg 43	} }",
"    {\"imt1100\"  f.exec    { send client setOption stdimg 44	} }",
"}",
"",
"",
"################################################################################",
"# Utility Callbacks",
"################################################################################",
"",
"# Procedures for sending client cursor commands.",
"proc GKey { key args } { send client gkey $key   }",
"proc GCmd args         { send client gcmd $args  }",
"",
"# Wrapper routine to execute a callback command while ignoring the extra",
"# arguments from the widget such as widget name, mode, etc.",
"proc Exec { cmd args } { eval $cmd		 }",
"",
"# Procedures to test True/False strings in resources.",
"proc true  { v } \\",
"   { expr { $v==\"true\"  || $v==\"True\"  || $v==\"TRUE\"  || $v==1 || $v==\"yes\" }",
"}",
"proc false { v } \\",
"   { expr { $v==\"false\" || $v==\"False\" || $v==\"FALSE\" || $v==0 || $v==\"no\"  }",
"}",
"",
"# No-op procedure for text widgets with no callbacks to swallow newline.",
"proc noop args { }",
"",
"# Common functions.",
"proc min { a b } { expr {($a < $b) ? $a : $b} }",
"proc max { a b } { expr {($a > $b) ? $a : $b} }",
"",
"# Dereference a variable.  E.g. in we define vars x[1-5] and want to use them",
"# in a loop later we can't simply access \"$x$i\" to get the value of '$x1',",
"# instead we use \"[GetVal x$i]\" to return the value of '$x1'. 'GV' is the",
"# shorthand version.",
"",
"proc GetVal { in } { upvar $in out ; return $out }",
"proc GV     { in } { upvar #0 $in out ; return $out }",
"",
"",
"",
"################################################################################",
"# Standard GUI Procedures",
"################################################################################",
"",
"proc Help args   {  }",
"proc Quit args   { send client Quit } ; send quitButton addCallback Quit",
"",
"",
"",
"################################################################################",
"# Initialize the GUI.",
"################################################################################",
"",
"proc Initialize args {",
"}",
"",
"",
"################################################################################",
"#  GUI Command Callbacks",
"################################################################################",
"#",
"proc Update args { ",
"    send client Update rtd",
"    send client Update smc",
"} ; send updateButton addCallback Update",
"",
"",
"################################################################################",
"#  GUI Parameter Callbacks",
"################################################################################",
"#",
"#       alert",
"#       initialize",
"#       disp_enable",
"#       stat_enable",
"#       hdrs_enable",
"#       disp_interval",
"#       smc_interval",
"#       stdimage",
"#       frame",
"#       rtdVal",
"#       smcVal",
"#",
"################################################################################",
"",
"",
"proc cpSetDispEnable args \\",
"{",
"    set value [send dispEnable get on]",
"    send client setOption disp_enable [expr {$value ? \"True\" : \"False\"}]",
"}; send dispEnable addCallback cpSetDispEnable",
"",
"proc cpTrackDispEnable { param old new } \\",
"{",
"    send dispEnable set on [true $new]",
"",
"    set sens [true $new]",
"    foreach w { dframeLabel dframeButton stdimgLabel stdimgButton } {",
"        send $w set sensitive $sens",
"    }",
"",
"    set disp [ send dispEnable get on ]",
"    set stat [ send statEnable get on ]",
"    if {! $disp && ! $stat } {",
"	#  Kill any RTD update timers ....",
"	;",
"    }",
"}; send disp_enable addCallback cpTrackDispEnable",
"",
"",
"",
"proc cpSetStatEnable args \\",
"{",
"    set value [send statEnable get on]",
"    send client setOption stat_enable [expr {$value ? \"True\" : \"False\"}]",
"}; send statEnable addCallback cpSetStatEnable",
"",
"proc cpTrackStatEnable { param old new } \\",
"{",
"    send statEnable set on [true $new]",
"",
"    set sens [true $new]",
"    foreach w {meanLab meanVal sigmaLab sigmaVal minLab minVal maxLab maxVal} {",
"        send $w set sensitive $sens",
"    }",
"    if {! $sens } {",
"        foreach w {meanVal sigmaVal minVal maxVal} {",
"            send $w set label \"\"",
"        }",
"    }",
"}; send stat_enable addCallback cpTrackStatEnable",
"",
"",
"",
"proc cpSetHdrsEnable args \\",
"{",
"    set value [send hdrEnable get on]",
"    send client setOption hdrs_enable [expr {$value ? \"True\" : \"False\"}]",
"}; send hdrEnable addCallback cpSetHdrsEnable",
"",
"proc cpTrackHdrsEnable { param old new } \\",
"{",
"    send hdrEnable set on [true $new]",
"}; send hdrs_enable addCallback cpTrackHdrsEnable",
"",
"",
"proc cpTrackFrameNum { param old new } \\",
"{",
"    send dframeButton set label $new",
"}; send frame addCallback cpTrackFrameNum",
"",
"",
"proc cpTrackStdimg { param old new } \\",
"{",
"    switch $new {",
"	42	{ send stdimgButton set label \"imt4400\"		}",
"	 6	{ send stdimgButton set label \"imt4096\"		}",
"	43	{ send stdimgButton set label \"imt2200\"		}",
"	44	{ send stdimgButton set label \"imt1100\"		}",
"    }",
"}; send stdimage addCallback cpTrackStdimg",
"",
"",
"",
"proc cpSetRTDVal { param old new } \\",
"{",
"    global rtd_seqno",
"",
"    set l [lindex $new 0]",
"    set key [lindex $l 0]",
"    set val [lindex $l 1]",
"",
"    #print \"setRTDVal:  new = $new\"",
"    #print \"setRTDVal:  l = $l   key = $key   val = $val\"",
"",
"    switch $key {",
"	expid	    { send expidVal  set label $val			}",
"	obsid	    { send obsidVal  set label $val			}",
"	seqno	    { send seqnoVal  set label [incr rtd_seqno $val]	}",
"	mean	    { send meanVal   set label $val			}",
"	sigma	    { send sigmaVal  set label $val			}",
"	min	    { send minVal    set label $val			}",
"	max	    { send maxVal    set label $val			}",
"    }",
"} ; send rtdVal addCallback cpSetRTDVal",
"",
"",
"",
"proc cpSetSMCVal { param old new } \\",
"{",
"    set l [lindex $new 0]",
"    set key [lindex $l 0]",
"    set val [lindex $l 1]",
"",
"    #print \"setSMCVal:  new = $new\"",
"    #print \"setSMCVal:  l = $l   key = $key   val = $val\"",
"",
"    switch $key {",
"	ctime	    { send ctimeVal    set label $val	}",
"	utime	    { send utimeVal    set label $val	}",
"	memKey	    { send memKeyVal   set label $val	}",
"	shmid	    { send shmIDVal    set label $val	}",
"	size	    { send sizeVal     set label $val	}",
"	memUsed	    { send memUseVal   set label $val	}",
"	memAvail    { send memAvailVal set label $val	}",
"	numProcs    { send nprocVal    set label $val	}",
"	nsegs	    { send pageUseVal  set label $val	}",
"    }",
"} ; send smcVal addCallback cpSetSMCVal",
"",
"",
"",
"",
"",
"",
"",
"################################################",
"# Define some TCL debug procedures.",
"################################################",
"",
"set tcl_up 0",
"",
"proc tclCommandClear {widget args}   { send tclEntry set string \"\" }",
"proc tclCommandExecute {widget args} { send server [send tclEntry {get",
"string}]",
"}",
"proc tclCommand {widget mode command args} { send server $command }",
"proc tclClose {widget args}                { send tcl_panel unmap }",
"proc tclOpen args \\",
"{ ",
"    global tcl_up",
"    send tcl_panel map ",
"    set tcl_up 1",
"}",
"",
"proc tclPanel args \\",
"{",
"    global tcl_up",
"    if {$tcl_up} {",
"        send tcl_panel unmap",
"        set tcl_up 0",
"    } else {",
"        send tcl_panel map",
"        set tcl_up 1",
"    }",
"}",
"",
"send tclClear   addCallback tclCommandClear",
"send tclExecute addCallback tclCommandExecute",
"send tclEntry   addCallback tclCommand",
"send tclDismiss addCallback tclClose",
"",
"",
"",
"################################################################################",
"# Status Polling timer procedures",
"################################################################################",
"",
"proc smcTimer args {",
"    global smcTimerId",
"",
"    send client Update smc",
"",
"    set interval [expr [send spollInterval get string] * 1000 ]",
"    set smcTimerId [postTimedCallback smcTimer $interval]",
"}; set smcTimerId [postTimedCallback smcTimer 1000]",
"",
"",
"proc rtdTimer args {",
"    global rtdTimerId",
"",
"    send client Update rtd",
"    set interval [expr [send dpollInterval get string] * 1000 ]",
"    set rtdTimerId [postTimedCallback rtdTimer $interval]",
"}; set rtdTimerId [postTimedCallback rtdTimer 1000]",
"",
"",
"",
"",
"",
"################################################################################",
"#  Now that we've done it all, Initialize and start up the GUI.",
"################################################################################",
"activate",
"Initialize",
