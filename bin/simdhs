#!/bin/csh -x

# Set the location of the system to help in configuring the machine names.
# The location is simply a 2-character code stored in the '_location' file
# in the top directory, values may be:
#
#	"CR"		=> Tucson Clean Room
#	"FR"		=> Tucson Flex Rig
#	"KP"		=> KPNO 4-meter
#	"CT"		=> CTIO 4-meter
#
set LOC		= `cat /dhs/_location`
set INST	= `cat /dhs/_instrument`
set NPANS	= 1
set NCLIENTS	= 5
set PRE	    	= "nf"

set	dbg	= 0
set	verb	= 0


#-------------------------------------------------------------------------------
# Process command-line arguments
#-------------------------------------------------------------------------------

while ("$1" != "")
    if ("$1" == "-l") then
	shift ; set LOC   = $1
    else if ("$1" == "-i") then
	shift ; set INST   = $1

    else if ("$1" == "-d") then
	set dbg = 1
    else if ("$1" == "-v") then
	set verb = 1

    else 
        echo "Invalid argument '"%1"'"
    endif

    if ("$2" == "") then
        break
    else
        shift
    endif
end

#-------------------------------------------------------------------------------
# Setup params based in instrument and location.
#-------------------------------------------------------------------------------

if (${INST} == "newfirm") then
    set NCLIENTS = 8
    set NPANS	 = 2
    set PRE	 = "nf"
else if (${INST} == "mosaic1") then
    set NCLIENTS = 5
    set NPANS	 = 1
    set PRE	 = "mosaic1"
else if (${INST} == "kosmos") then
    set NCLIENTS = 5
    set NPANS	 = 1
    set PRE	 = "kosmos"
else if (${INST} == "cosmos") then
    set NCLIENTS = 5
    set NPANS	 = 1
    set PRE	 = "cosmos"
else 
    echo "Invalid instrument '"${INST}"'"
    exit 1
endif

#-------------------------------------------------------------------------------
# Echo params
#-------------------------------------------------------------------------------
if ($dbg == 1) then
    echo "     LOC = ${LOC}"
    echo "    INST = ${INST}"
    echo "   NPANS = ${NPANS}"
    echo "NCLIENTS = ${NCLIENTS}"
    echo "     dbg = $dbg"
    echo "    verb = $verb"
    #exit
endif


echo "Using ${INST}${LOC} ..."

setenv USER_DISPLAY 	$DISPLAY
setenv RTD		fast:inet:3200

if ($verb == 1) then
    echo "Using DISPLAY ${DISPLAY} ..."
    echo "Using RTD ${RTD} ..."
endif


#-------------------------------------------------------------------------------
#  Clean up and reset.
#-------------------------------------------------------------------------------

#echo "Sync'ing /dhs Directory... via /dhs/bin/syncdhs"
#echo ""
#cp /dhs/super/super /dhs/bin
#/dhs/bin/syncdhs						>& /dev/null

echo "Cleaning up earlier DHS.... via /dhs/bin/pvmclean"
echo ""
if (-e /tmp/mosdca.log) then
cat /tmp/mosdca.log >> /tmp/mosdca.log.OLD
endif
if (-e /tmp/super.log) then
    cat /tmp/super.log >> /tmp/super.log.OLD
endif
/dhs/bin/pvmclean
/dhs/bin/smclean
#/dhs/dev/zzkpvm
echo ""

echo "Re-Starting VNC for DHS...."
echo ""
vncserver -kill :1						>& /dev/null
vncserver -geometry 1280x1024 -depth 8 -cc 3			>& /dev/null

echo "Starting VNC viewer...."
#(vncviewer -passwd /dhs/lib/vnc/passwd -display $USER_DISPLAY :1 >&/dev/null &)
(vncviewer -passwd ~/dhs/${INST}/lib/vnc/passwd :1 >&/dev/null &)


#  Reset the display variable
setenv DISPLAY 		:1


#-------------------------------------------------------------------------------
#  Now start the DHS components.
#-------------------------------------------------------------------------------
echo "Starting DHS...."
echo ""

 	
set rawDir   = "/home/data/"
set procDir  = "/home/data/"
set fileRoot = "image"

echo "init rawDir = " ${rawDir}

if ($#argv > 0) then
    if ("$1" == "-rawDir") then
	set rawDir = "$2"
    else if ("$1" == "-procDir") then
	set procDir = "$2"
    else if ("$1" == "-fileRoot") then
	set fileRoot = "$argv[2]"
    endif
endif

set XTERM	= "xterm -ls -sl 4096"



#--------------
# Collectors
#--------------
(sleep 5;  $XTERM -iconic -fn fixed -geometry 80x20+0+400 -e /dhs/bin/collector -console -mbus -port 4575 -debug 60 -id NOCS -host ${PRE}dhs-01 & ) &

#(sleep 6;  $XTERM -iconic -fn fixed -geometry 80x20+0+350 -e /dhs/bin/collector -console -mbus -port 4576 -debug 60 -id PanA -host ${PRE}dhs-01 & ) &
(sleep 6;  $XTERM -iconic -fn fixed -geometry 80x20+0+350 -e "/dhs/bin/collector -console -mbus -port 4576 -debug 60 -id PanA -host ${PRE}dhs-01 |& tee /tmp/_col.log" & ) &

if ($NPANS == 2) then
(sleep 7;  $XTERM -iconic -fn fixed -geometry 80x20+300+350 -e /dhs/bin/collector -console -mbus -port 4577 -debug 60 -id PanB -host ${PRE}dhs-02 & ) &
endif

#--------------
# SMC Managers
#--------------
(sleep 8;  $XTERM -iconic -fn fixed -geometry 80x20+0+450 -e /dhs/bin/smcmgr -console -trim -mbus -dev $RTD -debug 60 & ) &

if ($NPANS == 2) then
(sleep 9;  $XTERM -iconic -fn fixed -geometry 80x20+300+400 -e /dhs/bin/smcmgr -console -trim -mbus -dev $RTD -debug 60 & ) &
endif

#--------------
# Picfeeds
#--------------
(sleep 10;  $XTERM -iconic -fn fixed -geometry 80x20+0+500 -e /dhs/bin/pxf -console -mbus -debug 60 & ) &

if ($NPANS == 2) then
(sleep 11;  $XTERM -iconic -fn fixed -geometry 80x20+300+450 -e /dhs/bin/pxf -console -mbus -debug 60 & ) &
endif

#--------------
# DCA
#-------------
(sleep 15;  $XTERM \
    -fn fixed -geometry 80x20+645+360 \
    -e /dhs/bin/mosdca -debug 2 -reqlevel 2 -vminit cachesize=312m \
	-imformat %N%04I.fits \
	-maxgkw 150 -maxikw 150 \
	-dir /home/data \
	-ktm /dhs/lib/${INST}.tcl |& tee /tmp/mosdca.log & ) &



#--------------
# NOCS/Pan Clients
#--------------
if ($NPANS == 2) then
(sleep 16; $XTERM -geometry 80x12+500+720 -e "/dhs/test/pan  -debug 0 -host ${PRE}pan-b -B |& tee /tmp/_panB.log" ) &
endif

#(sleep 17; $XTERM -geometry 80x12+600+720 -e "/dhs/test/pan  -debug 0 -host ${PRE}pan-a -A |& tee /tmp/_panA.log" ) &
#(sleep 17; $XTERM -geometry 80x12+600+720 -e "/dhs/test/pan -bin -debug 0 -host ${PRE}pan-a -A |& tee /tmp/_panA.log" ) &
#(sleep 17; $XTERM -geometry 80x12+600+720 -e "/dhs/test/pan -noramp -bug -debug 0 -host ${PRE}pan-a -A |& tee /tmp/_panA.log" ) &
(sleep 17; $XTERM -geometry 80x12+600+720 -e "/dhs/test/pan -bug -debug 0 -host ${PRE}pan-a -A |& tee /tmp/_panA.log" ) &
(sleep 19; $XTERM -geometry 80x12+50+720 -e "/dhs/test/nocs -debug 0 -host ${PRE} -interactive |& tee /tmp/_nocs.log" )  &



#--------------
# IRAF Window
#-------------
(sleep 20 ; xgterm -iconic -fn fixed -geometry 80x40+10+100 -e cl & ) &




#--------------
# DHS Super
#-------------
exec $XTERM -fn fixed -geometry 80x22+645+40 \
    -e /dhs/bin/super -port 4150 -console \
	-host ${PRE} \
	-rawDir ${rawDir} \
	-procDir ${rawDir} \
	-config /dhs/lib/config-${INST}.sim \
	-nclients ${NCLIENTS} \
	-geometry 640x630+0+40
