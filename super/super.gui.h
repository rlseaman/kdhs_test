"# SUPER.GUI -- Default Data Handling System client GUI.",
"",
"# Reset the Widget Server.  Must be the first command so we restart correctly.",
"reset-server",
"",
"# Set the widgets and resources to be used in the base GUI.",
"set UIObjects(DHSSupervisor) { 	\\",
"	toplevel	Layout		controlPanel\\",
"        controlPanel    Group           menubarGroup\\",
"\\",
"\\",
"        controlPanel    Frame           tabFrame\\",
"        tabFrame    	Tabs            panelTabs\\",
"        panelTabs    	Frame           proc_panel\\",
"           proc_panel   Group           procGroup\\",
"        panelTabs    	Frame           smc_panel\\",
"           smc_panel    Group           smcGroup\\",
"        panelTabs    	Frame           rtd_panel\\",
"           rtd_panel    Group           rtdGroup\\",
"        panelTabs    	Frame           path_panel\\",
"           path_panel   Group           pathGroup\\",
"\\",
"\\",
"        pathGroup       Layout          pathLayout \\",
"        pathLayout      Label           pdirLabel \\",
"        pathLayout      Frame           pdirFrame \\",
"        pdirFrame       AsciiText       pdirValue \\",
"        pathLayout      Command         pdirApply \\",
"        pathLayout      Label           rdirLabel \\",
"        pathLayout      Frame           rdirFrame \\",
"        rdirFrame       AsciiText       rdirValue \\",
"        pathLayout      Command         rdirApply \\",
"        pathLayout      Label           rrootLabel \\",
"        pathLayout      Frame           rrootFrame \\",
"        rrootFrame      AsciiText       rrootValue \\",
"        pathLayout      Command         rrootApply \\",
"        pathLayout      Label           otfFileLabel \\",
"        pathLayout      Frame           otfFileFrame \\",
"        otfFileFrame    AsciiText       otfFileValue \\",
"        pathLayout      Command         otfFileApply \\",
"\\",
"        pathLayout      Label           pfWarnLabel \\",
"        pathLayout      Label           ktmLabel \\",
"        pathLayout      Frame           ktmFrame \\",
"        ktmFrame      	AsciiText       ktmValue \\",
"        pathLayout      Command         ktmApply \\",
"        pathLayout      Label           syspLabel \\",
"        pathLayout      Frame           syspFrame \\",
"        syspFrame       AsciiText       syspValue \\",
"        pathLayout      Command         syspApply \\",
"        pathLayout      Label           postpLabel \\",
"        pathLayout      Frame           postpFrame \\",
"        postpFrame      AsciiText       postpValue \\",
"        pathLayout      Command         postpApply \\",
"        pathLayout      Label           seqnumLabel \\",
"        pathLayout      Label           seqnumValue \\",
"\\",
"        pathLayout      Label	      	dbgLabel \\",
"        pathLayout      TextToggle      supDebug \\",
"        pathLayout      TextToggle      ioDebug \\",
"        pathLayout      TextToggle      sockDebug \\",
"        pathLayout      TextToggle      srDebug \\",
"        pathLayout      TextToggle      confDebug \\",
"        pathLayout      TextToggle      procDebug \\",
"        pathLayout      TextToggle      queDebug \\",
"        pathLayout      TextToggle      colDebug \\",
"        pathLayout      TextToggle      pxfDebug \\",
"        pathLayout      TextToggle      smcDebug \\",
"        pathLayout      TextToggle      mbDebug \\",
"        pathLayout      TextToggle      allDebug \\",
"\\",
"\\",
"        procGroup	Layout		procLayout\\",
"        procLayout      Group           procOptsGroup\\",
"        procLayout      Group           procResGroup\\",
"\\",
"        procResGroup	Layout		procResLayout\\",
"        procResLayout   Command      	pResSendKill\\",
"        procResLayout   Command      	pResSendQuit\\",
"        procResLayout   Command      	pResSendStatus\\",
"        procResLayout   TextToggle     	pResActivity\\",
"        procResLayout   TextToggle	pTransOpt\\",
"\\",
"        procResLayout   Frame		pResLFrame\\",
"        pResLFrame      AsciiText	pResLabels\\",
"        procResLayout   Frame      	pResFrame\\",
"        pResFrame       Layout		pResLayout\\",
"        pResLayout   	Viewport      	pResView\\",
"        pResView   	MultiList      	pResText\\",
"\\",
"        procResLayout   Frame		pTransLFrame\\",
"        pTransLFrame    Layout		pTransLLayout\\",
"        pTransLLayout   AsciiText	pTransLabels\\",
"        pTransLLayout   AsciiText      	pTransStat\\",
"        procResLayout   Frame      	pTransFrame\\",
"        pTransFrame   	Viewport      	pTransView\\",
"        pTransView	MultiList      	pTransText\\",
"\\",
"        procResLayout   Frame		pFilesLFrame\\",
"        pFilesLFrame    Layout		pFilesLLayout\\",
"        pFilesLLayout   AsciiText	pFilesLabels\\",
"        pFilesLLayout   AsciiText      	pFilesStat\\",
"        procResLayout   Frame      	pFilesFrame\\",
"        pFilesFrame   	Viewport      	pFilesView\\",
"        pFilesView   	AsciiText      	pFilesText\\",
"\\",
"        procOptsGroup	Layout		procOptsLayout\\",
"        procOptsLayout  Command         procReset \\",
"        procOptsLayout  Command         procUpdate \\",
"        procOptsLayout  Command         procClean \\",
"\\",
"\\",
"        controlPanel    Group           statusGroup\\",
"\\",
"        controlPanel    Frame           statusFrame\\",
"        statusFrame     Layout          statusLayout\\",
"        statusLayout    Label           statusStr\\",
"        statusLayout    Label           smcuse1\\",
"        statusLayout    Label           smcuse2\\",
"\\",
"        controlPanel    Label           conLab\\",
"        controlPanel    Label           con1\\",
"        controlPanel    Label           con2\\",
"        controlPanel    Label           con3\\",
"        controlPanel    Label           expLab\\",
"        controlPanel    Label           exp1\\",
"        controlPanel    Label           exp2\\",
"        controlPanel    Label           exp3\\",
"\\",
"        controlPanel    Frame           diskmonFrame\\",
"        diskmonFrame    Layout          diskmonLayout\\",
"        diskmonLayout   Label           diskuseStr\\",
"        diskmonLayout   Frame           diskuseFrame\\",
"        diskuseFrame    Gterm           diskuse\\",
"\\",
"        menubarGroup    Layout          menubarLayout\\",
"        menubarLayout   MenuButton      fileButton\\",
"        menubarLayout   Command         helpButton\\",
"        menubarLayout   Command         quitButton\\",
"\\",
"        rtdGroup     	Layout          rtdLayout\\",
"        rtdLayout       Group           rtdOptsGroup\\",
"        rtdLayout       Group           rtdResGroup\\",
"\\",
"        rtdOptsGroup	Layout		optsLayout\\",
"        optsLayout    	TextToggle      dispEnable\\",
"        optsLayout    	TextToggle      statEnable\\",
"        optsLayout    	TextToggle      rotEnable\\",
"        optsLayout    	TextToggle      trimEnable\\",
"        optsLayout    	TextToggle      otfEnable\\",
"        optsLayout    	TextToggle      loGain\\",
"        optsLayout    	TextToggle      parDisplay\\",
"        optsLayout    	Label      	dframeLabel\\",
"        optsLayout   	MenuButton      dframeButton\\",
"        optsLayout    	Label      	stdimgLabel\\",
"        optsLayout   	MenuButton      stdimgButton\\",
"        optsLayout    	Label      	nodeLabel\\",
"        optsLayout      Frame           nodeFrame \\",
"        nodeFrame       AsciiText       nodeValue \\",
"",
"\\",
"        rtdResGroup	Layout		resLayout\\",
"        resLayout    	Label      	expidLab\\",
"        resLayout    	Label      	expidVal\\",
"        resLayout    	Label      	obsidLab\\",
"        resLayout    	Label      	obsidVal\\",
"        resLayout    	Label      	sexpidLab\\",
"        resLayout    	Label      	sexpidVal\\",
"        resLayout    	Label      	sobsidLab\\",
"        resLayout    	Label      	sobsidVal\\",
"        resLayout    	AsciiText      	rtdStats\\",
"\\",
"\\",
"        smcGroup     	Layout          smcLayout\\",
"        smcLayout    	Label      	ctimeLab\\",
"        smcLayout    	Label      	ctimeVal\\",
"        smcLayout    	Label      	utimeLab\\",
"        smcLayout    	Label      	utimeVal\\",
"        smcLayout    	Label      	cacheLab\\",
"        smcLayout    	Label      	cacheVal\\",
"        smcLayout    	Label      	cnodeLab\\",
"        smcLayout    	MenuButton     	cnodeVal\\",
"        smcLayout    	Label      	memKeyLab\\",
"        smcLayout    	Label      	memKeyVal\\",
"        smcLayout    	Label      	shmIDLab\\",
"        smcLayout    	Label      	shmIDVal\\",
"        smcLayout    	Label      	sizeLab\\",
"        smcLayout    	Label      	sizeVal\\",
"        smcLayout    	Label      	memUseLab\\",
"        smcLayout    	Label      	memUseVal\\",
"        smcLayout    	Label      	memAvailLab\\",
"        smcLayout    	Label      	memAvailVal\\",
"        smcLayout    	Label      	nprocLab\\",
"        smcLayout    	Label      	nprocVal\\",
"        smcLayout    	Label      	pageUseLab\\",
"        smcLayout    	Label      	pageUseVal\\",
"\\",
"        smcLayout	Group           smcCmdGroup\\",
"        smcCmdGroup     Layout          smcCmdLayout\\",
"        smcCmdLayout	Command		smcCmdClean\\",
"        smcCmdLayout   	Command         smcCmdUpdate\\",
"        smcCmdLayout   	Command         smcCmdNext\\",
"        smcCmdLayout   	Command         smcCmdAll\\",
"        smcCmdLayout   	Label      	pollLab\\",
"        smcCmdLayout   	Frame      	pollFrame\\",
"        pollFrame    	AsciiText      	pollInterval\\",
"        smcCmdLayout   	TextToggle     	pollToggle\\",
"        smcCmdLayout   	TextToggle     	idToggle\\",
"\\",
"\\",
"        smcLayout	Group           smcPageGroup\\",
"        smcPageGroup    Layout          smcPageLayout\\",
"	smcPageLayout	Frame		segTabFrame\\",
"        segTabFrame   	Viewport      	segTabView\\",
"	segTabView	HTML		segTable\\",
"\\",
"\\",
"        toplevel        TopLevelShell   log \\",
"        log             Paned           logPanel \\",
"        logPanel        Box             logBox \\",
"        logBox          Command         logDone \\",
"        logBox          Command         logClear \\",
"        logPanel        AsciiText       logfile \\",
"\\",
"\\",
"        toplevel        TopLevelShell   tclShell\\",
"        tclShell        Layout          tclLayout\\",
"        tclLayout       Group           tclCmdGroup\\",
"        tclCmdGroup     Layout          tclCmd\\",
"        tclCmd          Command         tclClear\\",
"        tclCmd          Command         tclExecute\\",
"        tclCmd          Label           tclCoords\\",
"        tclCmd          Command         tclDismiss\\",
"        tclLayout       Frame           tclFrame\\",
"        tclFrame        AsciiText       tclEntry\\",
"\\",
"\\",
"        toplevel        TransientShell  warnShell\\",
"        warnShell       Layout          warn\\",
"        warn            Frame           warnFrame\\",
"        warnFrame       Layout          WFlayout\\",
"        WFlayout        Icon            warnIcon\\",
"        WFlayout        TextBox         warnText\\",
"        warn            Command         warnOk\\",
"        warn            Command         warnCancel\\",
"\\",
"\\",
"        toplevel        TopLevelShell   help_panel\\",
"        help_panel      Layout          helpLayout\\",
"        helpLayout      Group           helpMenuGroup\\",
"        helpMenuGroup   Layout          helpMenubar\\",
"\\",
"        helpMenubar     Command         helpClose\\",
"\\",
"        helpLayout      Command         helpBack\\",
"        helpLayout      Command         helpForward\\",
"        helpLayout      Command         helpHome\\",
"        helpLayout      Frame           hfFrame\\",
"        hfFrame         AsciiText       hfEntry\\",
"        helpLayout      Command         hfFind\\",
"        helpLayout      Command         hfClear\\",
"        helpLayout      Frame           helpTextFrame\\",
"        helpTextFrame   HTML            helpText\\",
"\\",
"\\",
"	toplevel        Parameter       dhsSuper\\",
"	dhsSuper        Parameter       alert\\",
"	dhsSuper        Parameter       verbose\\",
"	dhsSuper        Parameter       showActivity\\",
"	dhsSuper        Parameter       initialize\\",
"	dhsSuper        Parameter       smcVal\\",
"	dhsSuper        Parameter       smcStat\\",
"	dhsSuper        Parameter       smcCount\\",
"	dhsSuper        Parameter       dcaStat\\",
"	dhsSuper        Parameter       dcaTransStat\\",
"	dhsSuper        Parameter       dca_done\\",
"	dhsSuper        Parameter       rtdStat\\",
"	dhsSuper        Parameter       transStat\\",
"	dhsSuper        Parameter       conStat\\",
"	dhsSuper        Parameter       expStat\\",
"	dhsSuper        Parameter       procActive\\",
"	dhsSuper        Parameter       procTab\\",
"	dhsSuper        Parameter       transTab\\",
"	dhsSuper        Parameter       filesTab\\",
"	dhsSuper        Parameter       seqno\\",
"	dhsSuper        Parameter       froot\\",
"	dhsSuper        Parameter       ktm_p\\",
"	dhsSuper        Parameter       sysproc_p\\",
"	dhsSuper        Parameter       postproc_p\\",
"	dhsSuper        Parameter       rdirname\\",
"	dhsSuper        Parameter       pdirname\\",
"	dhsSuper        Parameter       msglog\\",
"	dhsSuper        Parameter       help\\",
"	dhsSuper        Parameter       dataFlag\\",
"	dhsSuper        Parameter       warning\\",
"	dhsSuper        Parameter       frame\\",
"	dhsSuper        Parameter       stdimg\\",
"	dhsSuper        Parameter       imtdev\\",
"\\",
"}",
"",
"",
"set UIResources(DHSSupervisor) { \\",
"",
"    !#######################################################",
"    ! Define some global resources for the main menu panels.",
"    !#######################################################",
"    *beNiceToColormap:				false",
"    *allowShellResize:				true",
"",
"    *background:				#eeeee8",
"    *Text*background:				#eeeee8",
"    *Command.background:			#eeeee8",
"    *Label.background:				#eeeee8",
"    *MenuButton.background:			#eeeee8",
"    *Toggle.background:				#eeeee8",
"",
"    *Command.foreground:			black",
"    *Label.foreground:				black",
"    *MenuButton.foreground:			black",
"    *Toggle.foreground:				black",
"    *SimpleMenu*foreground:			black",
"",
"    *Command.highlightThickness:		2",
"    *Label.highlightThickness:			0",
"    *MenuButton.highlightThickness:		2",
"    *Toggle.highlightThickness:			2",
"",
"    *Label.borderWidth:				0",
"    *Label.shadowWidth:				0",
"    *Command.shadowWidth:			1",
"    *Toggle.shadowWidth:			1",
"    *MenuButton.shadowWidth:			1",
"",
"    *Arrow.width:				16",
"    *Arrow.height:				25",
"    *Arrow.foreground:				#ddddd8",
"    *Arrow.background:				#eeeee8",
"",
"    *TextToggle.frameType:   			chiseled",
"    *TextToggle.frameWidth:   			2",
"    *TextToggle.onIcon:   			square1s",
"    *TextToggle.offIcon:   			square0s",
"",
"    *SmeBSB.leftMargin:				10",
"",
"    *Group.shrinkToFit:				True",
"",
"    !------------------------------------------------------------",
"    ! Define resources to take advantage of the 3D scrollbar look",
"    !------------------------------------------------------------",
"    *Scrollbar*background:			#eeeee8",
"    *Scrollbar*width:				15",
"    *Scrollbar*height:				15",
"    *Scrollbar*shadowWidth:			2",
"    *Scrollbar*cursorName:			top_left_arrow",
"    *Scrollbar*pushThumb:			true",
"",
"    !-------------------------------------",
"    ! Define new fonts to use for the GUI.",
"    !-------------------------------------",
"    *font:					7x13bold",
"    *Command.font:      			7x13bold",
"    *MenuButton.font:   			7x13bold",
"    *Toggle.font:       			7x13bold",
"    *Label.font:        			7x13bold",
"    *TextToggle.font:   			7x13bold",
"    *SimpleMenu*font:				7x13bold",
"",
"",
"    !#################################",
"    ! Define the main monitor window. ",
"    !#################################",
"    *rtdStatus.title:                           Data Handling System Supervisor",
"    *DHSSupervisor.title:                       Data Handling System Supervisor",
"    *DHSSupervisor.geometry:                    +0+0",
"    *DHSSupervisor.width:                       640",
"    *DHSSupervisor.height:                      640",
"",
"    *panelTabs.internalHeight:                  5",
"    *panelTabs.internalWidth:                   10",
"    !*panelTabs*tabForeground:			red4",
"    *panelTabs*topShadowContrast:		90",
"",
"    *tabFrame.outerOffset:                      3",
"    *tabFrame.innerOffset:                      0",
"    *tabFrame.frameWidth:                       0",
"    *tabFrame.frameType:                        chiseled",
"",
"    *rtd_panel.tabLabel:                    	Real-Time Display",
"    *rtd_panel.innerOffset:                 	5",
"    *smc_panel.tabLabel:                    	Shared Memory Cache",
"    *smc_panel.innerOffset:                 	5",
"    *path_panel.tabLabel:                    	Paths & Files",
"    *path_panel.innerOffset:                 	5",
"    *proc_panel.tabLabel:                    	Process Status",
"    *proc_panel.innerOffset:                 	5",
"",
"    !*controlPanel*font:                         7x13bold",
"    *controlPanel.geometry:                     =564x200+0+5",
"    *controlPanel.frameWidth:                   4",
"    *controlPanel.highlightThickness:           0",
"    *controlPanel.highlightThickness:           0",
"    *controlPanel.frameType:                    chiseled",
"    *controlPanel.innerOffset:                  5",
"    *controlPanel.outerOffset:                  5",
"    *controlPanel.layout: vertical { \\",
"        -1 \\",
"        menubarGroup < +inf * > \\",
"        7 \\",
"        tabFrame < +inf -inf * +inf -inf > \\",
"        -7 \\",
"        horizontal { \\",
"            2 \\",
"            statusFrame  < +inf -inf * >  5 diskmonFrame < +inf -inf * > \\",
"            2 \\",
"        } \\",
"        horizontal { \\",
"            2 \\",
"	    conLab 5  \\",
"		con1 < +inf * > 3 \\",
"		con2 < +inf * > 3 \\",
"		con3 < +inf * > \\",
"	    10 \\",
"	    expLab 5  \\",
"		exp1 < +inf * > 3 \\",
"		exp2 < +inf * > 3 \\",
"		exp3 < +inf * > \\",
"            2 \\",
"        } \\",
"        -2 \\",
"    }",
"",
"    *statusFrame.frameWidth:                    0",
"    *statusFrame.frameType:                     sunken",
"    *statusFrame.innerOffset:			1",
"    *statusFrame.outerOffset:			0",
"    *statusLayout*background:			ivory2",
"    *statusLayout*foreground:			black",
"    *statusLayout.layout: horizontal {\\",
"        statusStr 5 smcuse1 < +inf -inf * > smcuse2 < +inf -inf * > \\",
"    }",
"    *statusLayout*borderWidth:                  0",
"    *statusStr.width:                           120",
"    *statusStr.label:                           SMC Page Usage:",
"    *statusStr.justify:                         right",
"    *smcuseFrame.frameWidth:                    2",
"    *smcuseFrame.frameType:                     chiseled",
"    *smcuse1.justify:				left",
"    *smcuse2.justify:				left",
"",
"    *conLab.label:                              Connect Status:",
"    *con1.label:",
"    *con2.label:",
"    *con3.label:",
"    *expLab.label:                              Exp Status:",
"    *exp1.label:",
"    *exp2.label:",
"    *exp3.label:",
"",
"    *diskmonFrame.frameWidth:                   0",
"    *diskmonFrame.frameType:                    sunken",
"    *diskmonFrame.innerOffset:			1",
"    *diskmonFrame.outerOffset:			0",
"    *diskmonLayout*background:			ivory2",
"    *diskmonLayout*foreground:			black",
"    *diskmonLayout.layout: horizontal {\\",
"        diskuseStr 5 diskuseFrame < +inf -inf * > \\",
"    }",
"    *diskmonLayout*borderWidth:                 0",
"    *diskuseStr.width:                          120",
"    *diskuseStr.label:                          DCA Disk Usage:",
"    *diskuseStr.justify:                        right",
"    *diskuseFrame.frameWidth:                   2",
"    *diskuseFrame.frameType:                    sunken",
"    *diskuse.width:                             100",
"    *diskuse.height:                            23",
"",
"    *smcuse.color0:				grey20",
"    *diskuse.color0:				grey20",
"",
"",
"    !-----------------------------",
"    ! Menubar widget resources",
"    !-----------------------------",
"    *menubarGroup.borderWidth:                  0",
"    *menubarGroup.outerOffset:                  0",
"    *menubarGroup.innerOffset:                  5",
"    *menubarGroup.label:",
"    *menubarGroup*frameType:                    raised",
"    *menubarGroup*frameWidth:                   2",
"    *menubarGroup*shadowWidth:                  2",
"    *menubarGroup.location:                     0 0 460 40",
"    *menubarLayout.borderWidth:                 0",
"    *menubarLayout.layout: horizontal { \\",
"        -1 \\",
"        fileButton 3 < +inf > \\",
"        helpButton 3 < -3 > \\",
"        quitButton \\",
"        -1 \\",
"    }",
"    *fileButton.label:                          File",
"    *fileButton.menuName:                       fileMenu",
"    *helpButton.label:                          Help",
"    *quitButton.label:                          Quit",
"    *quitButton.font:                           7x13bold",
"",
"",
"    !-----------------------------------",
"    ! RTD Status information resources",
"    !-----------------------------------",
"    *rtdGroup.borderWidth:                   	0",
"    *rtdGroup.outerOffset:                   	0",
"    *rtdGroup.innerffset:                    	0",
"    *rtdGroup.label:",
"    *rtdGroup.Frame.frameType:               	sunken",
"    *rtdGroup.Frame.frameWidth:              	0",
"    *rtdGroup*borderWidth:                   	0 ",
"    *rtdGroup*Text*displayCaret:             	False",
"    *rtdGroup*Text*scrollVertical:           	never",
"    *rtdGroup*Text*scrollHorizontal:         	never",
"    *rtdGroup*Text*editType:                 	edit",
"    *rtdGroup*Text*height:                   	22",
"    *rtdGroup*TextToggle*highlightColor:     	yellow",
"    *rtdGroup*TextToggle*borderColor:     	white",
"    *rtdGroup.location:                      	0 0 564 240",
"    !*rtdGroup*Label.justify:                 	left",
"    *rtdGroup*Label.height:                  	22",
"    *rtdLayout.layout: vertical { \\",
"        3 \\",
"        rtdOptsGroup \\",
"        -9 \\",
"        rtdResGroup < +inf -inf * +inf -inf > \\",
"        1 \\",
"     }",
"",
"",
"",
"",
"    !-----------------------------",
"    ! RTD Options resources",
"    !-----------------------------",
"    *rtdOptsGroup.borderWidth:                  0",
"    *rtdOptsGroup.outerOffset:                  6",
"    *rtdOptsGroup.innerOffset:                  5",
"    *rtdOptsGroup.label:			Options",
"    *rtdOptsGroup*Frame.frameType:              chiseled",
"    *rtdOptsGroup*Frame.frameWidth:             1",
"    *rtdOptsGroup*Command.shadowWidth:       	0",
"    *rtdOptsGroup*MenuButton.shadowWidth:       1",
"    *rtdOptsGroup*MenuButton.width:       	120",
"    *rtdOptsGroup*TextToggle.frameType:         chiseled",
"!   *rtdOptsGroup*TextToggle.foreground:        yellow2",
"!   *rtdOptsGroup*TextToggle.background:        gray50",
"    *rtdOptsGroup*TextToggle.background:        gray20",
"    *rtdOptsGroup*shadowWidth:                  0",
"    *rtdOptsGroup.location:                     0 0 460 150",
"    *rtdOptsLayout.borderWidth:                 3",
"    *optsLayout*background:			grey10",
"    *optsLayout*MenuButton.background:		grey30",
"    *optsLayout*Label.foreground:		cyan2",
"    *optsLayout*TextToggle.foreground:		green2",
"    *optsLayout*AsciiText*foreground:		white",
"    *optsLayout*MenuButton.foreground:		yellow3",
"    *optsLayout.layout: vertical { \\",
"        8 \\",
"        vertical { \\",
"            1 \\",
"	    horizontal { \\",
"                8 \\",
"	        dframeLabel 3 dframeButton \\",
"                3 < +inf > \\",
"	        stdimgLabel 3 stdimgButton \\",
"                8 \\",
"	    } \\",
"	    horizontal { \\",
"	        8 nodeLabel 3 nodeFrame < +inf * > \\",
"	    } \\",
"            1 \\",
"        } \\",
"        10 \\",
"        vertical { \\",
"            1 \\",
"            horizontal { \\",
"                8 \\",
"	        dispEnable < +inf * > 2 \\",
"	        statEnable < +inf * > 2 \\",
"	        rotEnable  < +inf * > 2 \\",
"	        trimEnable  < +inf * > 2 \\",
"                8 \\",
"            } \\",
"            horizontal { \\",
"                8 \\",
"	        otfEnable < +inf * > 2 \\",
"	        loGain < +inf * > 2 \\",
"	        parDisplay < +inf * > 2 \\",
"                8 \\",
"            } \\",
"        } \\",
"        8 \\",
"    }",
"    *dispEnable.label:               		\\ Display Enable",
"    *dispEnable.on:                  		True",
"    *dispEnable.location:            		0 0 135 28",
"    *dispEnable.alignment:           		left",
"",
"    *statEnable.label:               		\\ Stats Enable",
"    *statEnable.on:                  		True",
"    *statEnable.location:            		0 0 120 28",
"    *statEnable.alignment:           		left",
"",
"    *rotEnable.label:               		\\ Rotate Enable",
"    *rotEnable.on:                  		True",
"    *rotEnable.sensitive:			False",
"    *rotEnable.location:            		0 0 120 28",
"    *rotEnable.alignment:           		left",
"",
"    *trimEnable.label:               		\\ RefPix Trim Enable",
"    *trimEnable.sensitive:			True",
"    *trimEnable.on:                  		True",
"    *trimEnable.location:            		0 0 160 28",
"    *trimEnable.alignment:           		left",
"",
"    *otfEnable.label:               		\\ OTF Enable",
"    *otfEnable.on:                  		True",
"    *otfEnable.location:            		0 0 120 28",
"    *otfEnable.alignment:           		left",
"",
"    *loGain.label:               		\\ Low Gain",
"    *loGain.on:                  		False",
"    *loGain.location:            		0 0 120 28",
"    *loGain.alignment:           		left",
"",
"    *parDisplay.label:               		\\ Parallelize Display",
"    *parDisplay.on:                  		True",
"    *parDisplay.location:            		0 0 120 28",
"    *parDisplay.alignment:           		left",
"",
"    *dframeLabel.label:               		Display Frame:",
"    *dframeLabel.justify:               	right",
"    *dframeButton.label:               		1",
"    *dframeButton.shadowWidth:               	0",
"    *dframeButton.location:            		0 0 135 28",
"    *resOptsGroup.optsLayout.dframeButton.width:120",
"",
"    *stdimgLabel.label:               		Frame Buffer:",
"    *stdimgLabel.justify:               	right",
"    *stdimgButton.label:               		imt4400",
"    *stdimgButton.shadowWidth:               	0",
"    *resOptsGroup.optsLayout.stdimgButton.width:120",
"",
"    *nodeLabel.label:                          	Display Node:",
"    *nodeLabel.width:                          	100",
"    *nodeLabel.alignment:                      	right",
"    *nodeFrame*frameWidth:			1",
"    *nodeFrame*frameType:			chiseled",
"    *nodeValue*scrollVertical:           	never",
"    *nodeValue*scrollHorizontal:         	never",
"    *nodeValue*displayCaret:             	False",
"    *nodeValue*editType:                 	edit",
"    *nodeValue*background:			#eeeee8",
"    *nodeValue*foreground:			yellow2",
"",
"",
"",
"",
"    !-----------------------------",
"    ! RTD Results resources",
"    !-----------------------------",
"    *rtdResGroup.borderWidth:                  	0",
"    *rtdResGroup.outerOffset:                  	6",
"    *rtdResGroup.innerOffset:                  	0",
"    *rtdResGroup.label:",
"    *rtdResGroup*Frame.frameType:              	sunken",
"    *rtdResGroup*Frame.frameWidth:             	2",
"    *rtdResGroup*frameType:                    	chiseled",
"    *rtdResGroup*frameWidth:                   	2",
"    *rtdResGroup*shadowWidth:                  	0",
"    *rtdResGroup*Label.background:              black",
"    *rtdResGroup*Label.foreground:              cyan3",
"    *rtdResGroup*Label.innerOffset:             3",
"    *rtdResGroup.location:                     	0 0 460 110",
"    *rtdResLayout*Label.background:		black",
"    *rtdResLayout*background:			black",
"    *rtdResLayout.borderWidth:                 	3",
"    *resLayout*background:			black",
"    *resLayout.layout: vertical { \\",
"        3 \\",
"        horizontal { \\",
"	    3 \\",
"            vertical { expidLab 3 sexpidLab } \\",
"	    3 \\",
"            vertical { expidVal < +inf * -inf > 3 sexpidVal < +inf * -inf > } \\",
"	    3 \\",
"            vertical { obsidLab 3 sobsidLab } \\",
"	    3 \\",
"            vertical { obsidVal < +inf * -inf > 3 sobsidVal < +inf * -inf > } \\",
"        } \\",
"        20 \\",
"        horizontal { \\",
"            12 \\",
"	    rtdStats < +inf -inf * +inf -inf > \\",
"            12 \\",
"        } \\",
"        3 \\",
"    }",
"    *expidLab.label:				ExpID",
"    *expidLab.justify:				right",
"    *expidLab.font:				7x13bold",
"    *expidLab.width:				90",
"",
"    *expidVal.label:				3.141592654",
"    *expidVal.justify:				left",
"    *expidVal.font:				7x13",
"",
"    *sexpidLab.label:				Sky ExpID",
"    *sexpidLab.justify:				right",
"    *sexpidLab.font:				7x13bold",
"    *sexpidLab.width:				90",
"",
"    *sexpidVal.label:				3.141592654",
"    *sexpidVal.justify:				left",
"    *sexpidVal.font:				7x13",
"",
"    *obsidLab.label:				ObsSetID",
"    *obsidLab.justify:				right",
"    *obsidLab.font:				7x13bold",
"    *obsidLab.width:				90",
"",
"    *obsidVal.label:				3.141592654",
"    *osbidVal.justify:				left",
"    *osbidVal.font:				7x13",
"",
"    *sobsidLab.label:				Sky ObsSetID",
"    *sobsidLab.justify:				right",
"    *sobsidLab.font:				7x13bold",
"    *sobsidLab.width:				90",
"",
"    *sobsidVal.label:				3.141592654",
"    *sosbidVal.justify:				left",
"    *sosbidVal.font:				7x13",
"",
"    *rtdStats*foreground:			white",
"    *rtdStats.scrollVertical:			True",
"    *rtdStats.showCaret:			False",
"",
"    *rtdResGroup.resLayout.nodeLab.foreground:		yellow3",
"    *rtdResGroup.resLayout.expidLab.foreground:		yellow3",
"    *rtdResGroup.resLayout.obsidLab.foreground:		yellow3",
"    *rtdResGroup.resLayout.sexpidLab.foreground:	yellow3",
"    *rtdResGroup.resLayout.sobsidLab.foreground:	yellow3",
"    *rtdResGroup.resLayout.rtdStats*foreground:		ivory2",
"",
"",
"    !-----------------------------",
"    ! Process Table resources",
"    !-----------------------------",
"    *procGroup.borderWidth:                   	0",
"    *procGroup.outerOffset:                   	0",
"    *procGroup.innerffset:                    	0",
"    *procGroup.label:",
"    *procGroup.Frame.frameType:               	sunken",
"    *procGroup.Frame.frameWidth:              	0",
"    *procGroup*borderWidth:                   	0 ",
"    *procGroup*Text*font:			7x13bold",
"    *procGroup*Text*background:             	grey15",
"    *procGroup*Text*foreground:             	cyan2",
"    *procGroup*Text*displayCaret:             	false",
"    *procGroup*Text*scrollVertical:           	whenNeeded",
"    *procGroup*Text*scrollHorizontal:         	never",
"    *procGroup*Text*editType:                 	edit",
"    *procGroup*Text*height:                   	22",
"    *procGroup*TextToggle*highlightColor:     	green",
"    *procGroup*Text*Scrollbar*background:       #c0c0c0",
"    *procGroup*Text*Scrollbar*width:            15",
"    *procGroup*Text*Scrollbar*height:           15",
"    *procGroup*Text*Scrollbar*shadowWidth:      2",
"    *procGroup.location:                      	0 0 564 240",
"    *procGroup*Label.justify:                 	left",
"    *procGroup*Label.height:                  	22",
"    *procLayout.layout: vertical { \\",
"        -3 \\",
"        procResGroup < +inf -inf * +inf -inf > \\",
"        -9 \\",
"        procOptsGroup \\",
"        -3 \\",
"    }",
"",
"",
"    !--------------------------------",
"    ! Process Table Options resources",
"    !--------------------------------",
"    *procOptsGroup.borderWidth:                 0",
"    *procOptsGroup.outerOffset:                 6",
"    *procOptsGroup.innerOffset:                 5",
"    *procOptsGroup.label:",
"    *procOptsGroup*Frame.frameType:             sunken",
"    *procOptsGroup*Frame.frameWidth:            2",
"    *procOptsGroup*frameType:                   chiseled",
"    *procOptsGroup*frameWidth:                  2",
"    *procOptsGroup*Command.shadowWidth:       	0",
"    *procOptsGroup*MenuButton.shadowWidth:      2",
"    *procOptsGroup*MenuButton.width:       	120",
"    *procOptsGroup*TextToggle.frameType:        raised",
"    *procOptsGroup*Command.shadowWidth:         2",
"    *procOptsGroup.location:                    0 0 460 55",
"    *procOptsLayout.borderWidth:                3",
"    *procOptsLayout.layout: horizontal { \\",
"        8 \\",
"	procReset 3 < +inf > procUpdate 3 procClean \\",
"        8 \\",
"    }",
"    *procReset.label:               		Reset",
"    *procReset.sensitive:              		false",
"    *procUpdate.label:               		Update",
"    *procUpdate.sensitive:             		false",
"    *procClean.label:               		Clean",
"",
"",
"    !--------------------------------",
"    ! Process Table Results resources",
"    !--------------------------------",
"    *procResGroup.borderWidth:                  0",
"    *procResGroup.outerOffset:                  6",
"    *procResGroup.innerOffset:                  5",
"    *procResGroup.label:",
"    *procResGroup*Frame.frameType:              sunken",
"    *procResGroup*Frame.frameWidth:             2",
"    *procResGroup*frameType:                    chiseled",
"    *procResGroup*frameWidth:                   2",
"    *procResGroup*Command.shadowWidth:       	1",
"    *procResGroup*MenuButton.shadowWidth:       2",
"    *procResGroup*MenuButton.width:       	120",
"    *procResGroup*Command.shadowWidth:          1",
"    *procResGroup*Command.background:		gray20",
"    *procResGroup*Command.foreground:		#eeeee8",
"    *procResGroup*Command.foreground:		black",
"    *procResGroup*Command.background:		#eeeee8",
"    *procResGroup.location:                     0 0 460 90",
"    *procResGroup*Text*scrollVertical:          always",
"    *procResGroup*Text*scrollHorizontal:        whenNeeded",
"    *procResGroup*Text*Scrollbar*background:    #c0c0c0",
"    *procResGroup*Text*Scrollbar*width:         15",
"    *procResGroup*Text*Scrollbar*height:        15",
"    *procResGroup*Text*Scrollbar*shadowWidth:   2",
"    !*procResGroup*TextToggle*background:	black",
"    !*procResGroup*TextToggle*foreground:	cyan2",
"    !*procResGroup*TextToggle.offIcon:           diamond0s",
"    !*procResGroup*TextToggle.onIcon:            diamond1s",
"    !*procResGroup*TextToggle*highlightColor:    white",
"    *procResGroup*TextToggle.outerOffset:       0",
"    *procResGroup*TextToggle.frameWidth:        0",
"    *procResGroup*TextToggle.selectionStyle:    multi",
"    *procResGroup*TextToggle.leftMargin:        3",
"    *procResGroup*TextToggle.alignment:         left",
"    *procResGroup*Scrollbar.width:              15",
"    *procResGroup*Scrollbar.minimumThumb:       15",
"    *procResGroup*Scrollbar.background:         #c0c0c0",
"    *procResGroup*Viewport.allowVert:           True",
"    *procResGroup*Viewport.allowHoriz:          False",
"    *procResGroup*Viewport.useRight:            False",
"    *procResGroup*Viewport.resizeable:          True",
"",
"",
"    *procResLayout.background:			orange",
"    *procResLayout.background:			#eeeee8",
"    *procResLayout.borderWidth:                 3",
"    *procResLayout*Frame.frameWidth:            1",
"    *procResLayout.layout: vertical { \\",
"	horizontal { \\",
"	    4 \\",
"	    pResSendKill < +inf -inf * > \\",
"	    1 \\",
"	    pResSendQuit < +inf -inf * > \\",
"	    1 \\",
"	    pResSendStatus < +inf -inf * > \\",
"	    20 < +inf > \\",
"	    pResActivity 2 pTransOpt \\",
"	} \\",
"	7 \\",
"        pResLFrame < +inf -inf * > \\",
"	-2 \\",
"	pResFrame < +inf -inf * +inf -inf > \\",
"        pTransLFrame < +inf -inf * > \\",
"	-2 \\",
"	pTransFrame < +inf -inf * > \\",
"	-2 \\",
"        pFilesLFrame < +inf -inf * > \\",
"	-2 \\",
"	pFilesFrame < +inf -inf * > \\",
"	-2 \\",
"    }",
"    *pResLayout*Command.shadowWidth:		2",
"    *pResLayout.layout: vertical { \\",
"	pResView < +inf -inf * +inf -inf > \\",
"    }",
"    *pTransLLayout.layout: horizontal { \\",
"        pTransLabels pTransStat < +inf -inf * > \\",
"	2 \\",
"    }",
"    *pFilesLLayout.layout: horizontal { \\",
"        pFilesLabels pFilesStat < +inf -inf * > \\",
"    }",
"    *pResLabels*foreground:            		green2",
"    *pResText*foreground:            		cyan3",
"    *pResText*maxSelectable:			6",
"    *pResText*verticalList:			True",
"    *pResFrame.frameWidth:			0",
"    *pResSendKill.label:			Kill",
"    *pResSendKill.sensitive:			False",
"    *pResSendQuit.label:			Quit",
"    *pResSendQuit.sensitive:			False",
"    *pResSendStatus.label:			Update",
"    *pResSendStatus.sensitive:			False",
"    *procResLayout*pResActivity.shadowWidth:	3",
"    *procResLayout*pResActivity.background:	#eeeee8",
"    *procResLayout*pResActivity.foreground:	black",
"    *procResLayout*pResActivity.offIcon:        square0s",
"    *procResLayout*pResActivity.onIcon:         square1s",
"    *procResLayout*pResActivity.label:		Show\\ Activity",
"    *procResLayout*pResActivity.on:		True",
"    *procResLayout*pResActivity.location:	0 0 120 23",
"    *pTransLabels*foreground:            	green2",
"    *procResLayout*pTransOpt.background:        #eeeee8",
"    *procResLayout*pTransOpt.foreground:        black",
"    *procResLayout*pTransOpt.offIcon:           square0s",
"    *procResLayout*pTransOpt.onIcon:            square1s",
"    *procResLayout*pTransOpt.label:             Verbose Mode",
"    *procResLayout*pTransOpt.on:                True",
"    *procResLayout*pTransOpt.location:		0 0 120 23",
"    *pTransStat*foreground:            		cyan3",
"    *pTransText*foreground:            		cyan3",
"    *pTransText*height:				80",
"    *pTransText*maxSelectable:			6",
"    *pTransText*verticalList:			True",
"    *pFilesLabels*foreground:            	green2",
"    *pFilesText*foreground:            		cyan3",
"    *pFilesText*height:				60",
"",
"",
"",
"    !----------------------------------",
"    ! SMC Status information resources",
"    !----------------------------------",
"    *pathGroup.borderWidth:                   	0",
"    *pathGroup.outerOffset:                   	5",
"    *pathGroup.innerffset:                    	5",
"    *pathGroup.label:				Paths, Ports & Nodes",
"    *pathGroup*Frame.frameType:               	sunken",
"    *pathGroup*Frame.frameWidth:              	2",
"    *pathGroup*Frame.width:              	30",
"    *pathGroup*borderWidth:                   	0",
"    *pathGroup*Command.shadowWidth:             2",
"    *pathGroup*Label.frameType:                 sunken",
"    *pathGroup*Label.shadowWidth:               0",
"    *pathGroup*Label.background:                black",
"    *pathGroup*Label.foreground:                cyan3",
"    *pathGroup*Label.innerOffset:               3",
"    *pathGroup*Label.height:                  	27",
"    *pathGroup*Command.background:              #efefe8",
"    *pathGroup*Command.foreground:              black",
"    !*pathGroup*Command.background:              red4",
"    !*pathGroup*Command.foreground:              ivory",
"    *pathGroup.innerOffset:                  	5",
"    *pathGroup*Text*displayCaret:             	True",
"    *pathGroup*Text*scrollVertical:           	never",
"    *pathGroup*Text*scrollHorizontal:         	never",
"    *pathGroup*Text*background:                 ivory3",
"    *pathGroup*Text*foreground:                 black",
"    *pathGroup*Text*editType:                 	edit",
"    *pathGroup*Text*height:                   	24",
"    *pathGroup*TextToggle.height:              	32",
"    *pathGroup*TextToggle.width:              	130",
"    *pathGroup*TextToggle.background:		grey30",
"    *pathGroup*TextToggle.highlightColor:	red",
"    *pathGroup*TextToggle.outerOffset:       	1",
"    *pathGroup*TextToggle.innerOffset:       	1",
"    *pathGroup*TextToggle.frameWidth:        	2",
"    *pathGroup*TextToggle.selectionStyle:    	multi",
"    *pathGroup*TextToggle.leftMargin:        	5",
"    *pathGroup*TextToggle.alignment:         	left",
"    *pathLayout*background:			black",
"    *pathLayout*foreground:			yellow3",
"",
"    *pathLayout.layout: vertical { \\",
"        35 \\",
"	horizontal { \\",
"          8 \\",
"          vertical { \\",
"	      5 rrootLabel 15 rdirLabel 15 pdirLabel 15 otfFileLabel 90 \\",
"		ktmLabel 15 syspLabel 15 postpLabel \\",
"	  } \\",
"          2 \\",
"          vertical { \\",
"            horizontal { \\",
"	        rrootFrame < +inf * > 5 rrootApply 1 < +inf > 5 \\",
"		seqnumLabel 3 seqnumValue \\",
"	    } \\",
"            5 \\",
"            horizontal { \\",
"                rdirFrame  < +inf * > 5 rdirApply \\",
"	    } \\",
"            5 \\",
"            horizontal { \\",
"                pdirFrame  < +inf * > 5 pdirApply \\",
"	    } \\",
"            5 \\",
"            horizontal { \\",
"                otfFileFrame  < +inf * > 5 otfFileApply \\",
"	    } \\",
"            45 \\",
"	    pfWarnLabel < +inf * +inf > \\",
"            15 \\",
"            horizontal { \\",
"                ktmFrame  < +inf * > 5 ktmApply \\",
"	    } \\",
"            5 \\",
"            horizontal { \\",
"                syspFrame  < +inf * > 5 syspApply \\",
"	    } \\",
"            5 \\",
"            horizontal { \\",
"                postpFrame  < +inf * > 5 postpApply \\",
"	    } \\",
"            20 \\",
"	  } \\",
"          25 \\",
"        } \\",
"        8 < +inf > \\",
"        horizontal { 30 dbgLabel < +inf * > } \\",
"        5 \\",
"        vertical { \\",
"            horizontal { \\",
"	      1 < +inf > supDebug ioDebug sockDebug srDebug 1 < +inf > \\",
"	    } \\",
"            horizontal { \\",
"	      1 < +inf > confDebug procDebug queDebug colDebug 1 < +inf > \\",
"	    } \\",
"            horizontal { \\",
"	      1 < +inf > pxfDebug smcDebug mbDebug allDebug 1 < +inf > \\",
"	    } \\",
"	} \\",
"        8 \\",
"     }",
"    *rrootApply.label:				Apply",
"    *rdirApply.label:				Apply",
"    *pdirApply.label:				Apply",
"    *otfFileApply.label:			Apply",
"    *ktmApply.label:				Apply",
"    *postpApply.label:				Apply",
"    *syspApply.label:				Apply",
"",
"    *rrootLabel.label:				(Raw) Image Root Name:",
"    *rrootLabel.justify:			right",
"    *rrootValue.string:				image",
"    *rdirLabel.label:				Raw Image Dir:",
"    *rdirLabel.justify:				right",
"    *rdirValue.string:				/home/data/",
"    *pdirLabel.label:				Processed Image Dir:",
"    *pdirLabel.justify:				right",
"    *pdirValue.string:				/home/data/",
"    *otfFileLabel.label:			OTF Image Name:",
"    *otfFileLabel.justify:			right",
"    *otfFileValue.string:			None",
"",
"    *pfWarnLabel.label:		WARNING: Change items below with extreme caution!",
"    *pathGroup.pathLayout.pfWarnLabel.foreground:	yellow2",
"",
"    *ktmLabel.label:				KTM Filename:",
"    *ktmLabel.justify:				right",
"    *ktmValue.string:				/dhs/lib/ktm.tcl",
"    *syspLabel.label:				Sysproc Script:",
"    *syspLabel.justify:				right",
"    *syspValue.string:				/dhs/lib/sysproc",
"    *postpLabel.label:				Postproc Script:",
"    *postpLabel.justify:			right",
"    *postpValue.string:				/dhs/lib/postproc",
"    *seqnumLabel.label:				Sequence Num:",
"    *seqnumLabel.justify:			right",
"    *seqnumValue.label:				0001",
"    *seqnumValue.background:			black",
"    *pathGroup*seqnumValue.foreground:		yellow2",
"",
"              ",
"    *dbgLabel.label:				Debug Flags:",
"    *dbgLabel.justify:				left",
"    *dbgLabel.background:			black",
"    *dbgLabel.foreground:			yellow",
"",
"    *supDebug.label:				Supervisor",
"    *ioDebug.label:				I/O",
"    *sockDebug.label:				Socket",
"    *srDebug.label:				Send/Recv",
"    *confDebug.label:				Config",
"    *procDebug.label:				Process",
"    *queDebug.label:				Queue",
"    *colDebug.label:				Collector",
"    *pxfDebug.label:				PXF",
"    *smcDebug.label:				SMC",
"    *mbDebug.label:				MBus",
"    *allDebug.label:				ALL",
"",
"\\",
"",
"    !----------------------------------",
"    ! SMC Status information resources",
"    !----------------------------------",
"    *smcGroup.borderWidth:                   	0",
"    *smcGroup.outerOffset:                   	5",
"    *smcGroup.innerffset:                    	5",
"    *smcGroup.label:                         	Shared Memory Cache Status",
"    *smcGroup*Frame.frameType:               	sunken",
"    *smcGroup*Frame.frameWidth:              	2",
"    *smcGroup*borderWidth:                   	0",
"    *smcGroup*Command.shadowWidth:              2",
"    *smcGroup*Label.frameType:                  sunken",
"    *smcGroup*Label.shadowWidth:                0",
"    *smcGroup*Label.background:                 black",
"    *smcGroup*Label.foreground:                 cyan3",
"    *smcGroup*Label.innerOffset:                3",
"    *smcGroup*Label.height:                  	27",
"    *smcGroup*Command.background:               #eeeee8",
"    *smcGroup*Command.foreground:               black",
"    *smcGroup.innerOffset:                  	5",
"    *smcGroup.location:                      	0 0 564 455",
"    *smcLayout.smcPageGroup.height		260",
"    *smcLayout.background:			black",
"    *smcLayout.foreground:			yellow3",
"    *smcLayout.layout: vertical { \\",
"        8 \\",
"        5 \\",
"        horizontal { \\",
"	    8 \\",
"            ctimeLab 3 ctimeVal 1 < +inf > \\",
"            utimeLab 3 utimeVal 1 < +inf > \\",
"	    8 \\",
"        } \\",
"	2\\",
"        horizontal { \\",
"	    8 \\",
"            cacheLab 3 cacheVal 1 < +inf > \\",
"            cnodeLab 3 cnodeVal <+inf *> \\",
"	    16 \\",
"        } \\",
"	2\\",
"        horizontal { \\",
"	    8 \\",
"            memKeyLab 3 memKeyVal 1 < +inf > \\",
"	    shmIDLab  3 shmIDVal  1 < +inf > \\",
"	    sizeLab   3 sizeVal \\",
"	    8 \\",
"        } \\",
"        horizontal { \\",
"	    8 \\",
"            memUseLab   3   memUseVal 1 < +inf > \\",
"            memAvailLab 3 memAvailVal 1 < +inf > \\",
"	    nprocLab    3    nprocVal 1 < +inf > \\",
"            pageUseLab  3  pageUseVal \\",
"	    8 \\",
"        } \\",
"        horizontal { \\",
"            smcPageGroup < +inf -inf * +inf -inf > \\",
"        } \\",
"        -8 \\",
"        horizontal { \\",
"            smcCmdGroup < +inf -inf * +inf -inf > \\",
"        } \\",
"        -1 \\",
"     }",
"    *ctimeLab.label:			Created:\\ ",
"    *ctimeLab.justify:			left",
"    *ctimeLab.font:			7x13bold",
"    *ctimeVal.label:			Thu Mar 23 10:55:42 2006",
"    *ctimeVal.justify:			left",
"    *ctimeVal.font:			7x13",
"",
"    *utimeLab.label:			Last Updated:\\ ",
"    *utimeLab.justify:			right",
"    *utimeLab.font:			7x13bold",
"    *utimeVal.label:			Thu Mar 23 10:55:42 2006",
"    *utimeVal.justify:			left",
"    *utimeVal.font:			7x13",
"",
"    *cacheLab.label:			Cache File:\\ ",
"    *cacheLab.justify:			left",
"    *cacheLab.font:			7x13bold",
"    *cacheVal.label:			/tmp/.smc359",
"    *cacheVal.justify:			left",
"    *cacheVal.font:			7x13",
"",
"    *cnodeLab.label:			SMC Node:\\ ",
"    *cnodeLab.justify:			right",
"    *cnodeLab.font:			7x13bold",
"    *cnodeVal.label:			mosaic1dhs-01",
"    *cnodeVal.justify:			left",
"    *cnodeVal.font:			7x13",
"    *cnodeVal.menuName:			smcNodes",
"    *cnodeVal.background:		grey20",
"    *cnodeVal.foreground:		cyan2",
"",
"    *memKeyLab.label:			MemKey:\\ ",
"    *memKeyLab.justify:			left",
"    *memKeyLab.font:			7x13bold",
"    *memKeyVal.label:			0x305c40b",
"    *memKeyVal.justify:			left",
"    *memKeyVal.font:			7x13",
"",
"    *shmIDLab.label:			ShmID:\\ ",
"    *shmIDLab.justify:			left",
"    *shmIDLab.font:			7x13bold",
"    *shmIDVal.label:			389054467",
"    *shmIDVal.justify:			left",
"    *shmIDVal.font:			7x13",
"",
"    *sizeLab.label:			SMC Size:\\ ",
"    *sizeLab.justify:			right",
"    *sizeLab.font:			7x13bold",
"    *sizeVal.label:			122880 bytes",
"    *sizeVal.justify:			left",
"    *sizeVal.font:			7x13",
"",
"    *memUseLab.label:			Mem Used:\\ ",
"    *memUseLab.justify:			left",
"    *memUseLab.font:			7x13bold",
"    *memUseVal.label:			22 Mb",
"    *memUseVal.justify:			left",
"    *memUseVal.font:			7x13",
"",
"    *memAvailLab.label:			Avail:\\ ",
"    *memAvailLab.justify:		left",
"    *memAvailLab.font:			7x13bold",
"    *memAvailVal.label:			1943 Mb",
"    *memAvailVal.justify:		left",
"    *memAvailVal.font:			7x13",
"",
"    *nprocLab.label:			NumProcs:\\ ",
"    *nprocLab.justify:			center",
"    *nprocLab.font:			7x13bold",
"    *nprocVal.label:			2",
"    *nprocVal.justify:			left",
"    *nprocVal.font:			7x13",
"",
"    *pageUseLab.label:			Segs Used:\\ ",
"    *pageUseLab.justify:		right",
"    *pageUseLab.font:			7x13bold",
"    *pageUseVal.label:			16 of 2048",
"    *pageUseVal.justify:		left",
"    *pageUseVal.font:			7x13",
"",
"",
"    *smcGroup.smcLayout.ctimeLab.foreground:		yellow3",
"    *smcGroup.smcLayout.utimeLab.foreground:		yellow3",
"    *smcGroup.smcLayout.cacheLab.foreground:		yellow3",
"    *smcGroup.smcLayout.cnodeLab.foreground:		yellow3",
"    *smcGroup.smcLayout.memKeyLab.foreground:		yellow3",
"    *smcGroup.smcLayout.shmIDLab.foreground:		yellow3",
"    *smcGroup.smcLayout.sizeLab.foreground:		yellow3",
"    *smcGroup.smcLayout.memUseLab.foreground:		yellow3",
"    *smcGroup.smcLayout.memAvailLab.foreground:		yellow3",
"    *smcGroup.smcLayout.nprocLab.foreground:		yellow3",
"    *smcGroup.smcLayout.pageUseLab.foreground:		yellow3",
"",
"",
"    !-----------------------------",
"    ! Segment/Page List resources",
"    !-----------------------------",
"    *smcCmdGroup.borderWidth:                  		0",
"    *smcCmdGroup.outerOffset:                  		4",
"    *smcCmdGroup.innerOffset:                  		1",
"    !*smcCmdGroup.label:			     		Cache Control",
"    *smcCmdGroup.label:",
"    *smcCmdGroup*Frame.frameType:              		sunken",
"    *smcCmdGroup*Frame.frameWidth:             		2",
"    *smcCmdGroup*Command.height:			14",
"    *smcCmdGroup*Command.shadowWidth:			1",
"    *smcCmdGroup*Label.foreground:                 	yellow3",
"    *smcCmdGroup*Label.background:                 	black",
"    *smcCmdGroup*Text*displayCaret:             	False",
"    *smcCmdGroup*Text*scrollVertical:           	never",
"    *smcCmdGroup*Text*scrollHorizontal:         	never",
"    *smcCmdGroup*Text*editType:                 	edit",
"    *smcCmdGroup*Text*height:                   	22",
"    *smcCmdGroup*TextToggle.highlightColor:		ivory2",
"    *smcCmdGroup*TextToggle.foreground:			cyan3",
"    *smcCmdGroup*frameType:                    		chiseled",
"    *smcCmdGroup*frameWidth:                   		1",
"    *smcCmdGroup*shadowWidth:                  		1",
"    *smcCmdGroup*background:				black",
"    *smcCmdGroup*foreground:				yellow2",
"",
"    *smcCmdGroup.location:                     		0 0 460 60",
"    *smcCmdLayout.borderWidth:                 		1",
"    *smcCmdLayout.layout: vertical { \\",
"	horizontal { \\",
"          4 \\",
"            smcCmdClean   < +inf * -inf > \\",
"            smcCmdUpdate  < +inf * -inf > \\",
"            smcCmdNext    < +inf * -inf > \\",
"            smcCmdAll     < +inf * -inf > \\",
"          4 \\",
"	} \\",
"        10 \\",
"        horizontal { \\",
"	    8 \\",
"	    pollLab 5 \\ pollFrame \\",
"	    5 < +inf > \\",
"	    pollToggle 8 idToggle \\",
"	    8 \\",
"	} \\",
"        -2 \\",
"    }",
"",
"    *smcCmdFlush.label:					Flush",
"    *smcCmdClean.label:					Delete All",
"    *smcCmdClean.background:				red2",
"    *smcCmdClean.foreground:				ivory",
"    *smcCmdUpdate.label:				Update Status",
"    *smcCmdNext.label:					Process Next",
"    *smcCmdAll.label:					Process All",
"",
"    *pollLab.label:	   				Poll Interval: ",
"    !*pollInterval.sensitive:				False",
"    *pollInterval*string:               		5",
"    *pollInterval*height:               		22",
"    *pollInterval*width:                		36",
"    *pollInterval*Text*editType:        		edit",
"",
"    *pollToggle.label:					Continuous Poll",
"    *pollToggle.on:					True",
"    !*pollToggle.sensitive:				False",
"    *pollToggle*location:               		0 0 130 18",
"    *pollToggle*background:				black",
"    *pollToggle*foreground:				ivory3",
"    *pollToggle*frameWidth:				0",
"",
"    *idToggle.label:					List by ExpID",
"    *idToggle.on:					True",
"    *idToggle*location:               			0 0 130 18",
"    *idToggle*background:				black",
"    *idToggle*foreground:				ivory3",
"    *idToggle*frameWidth:				0",
"",
"    *smcCmdGroup.smcCmdLayout.pollLab.foreground:	yellow3",
"    *smcCmdGroup.smcCmdLayout.pollLab.background:	black",
"",
"",
"    !-----------------------------",
"    ! Segment/Page List resources",
"    !-----------------------------",
"    *smcPageGroup.borderWidth:                  	0",
"    *smcPageGroup.outerOffset:                  	8",
"    *smcPageGroup.innerOffset:                  	0",
"    *smcPageGroup.label:",
"    *smcPageGroup*Frame.frameType:              	sunken",
"    *smcPageGroup*Frame.frameWidth:             	0",
"    *smcPageGroup*frameType:                    	chiseled",
"    *smcPageGroup*frameWidth:                   	0",
"    *smcPageGroup*shadowWidth:                  	2",
"    *smcPageGroup*segFrame.framwwidth:			0",
"    *smcPageGroup*segTable.background:			black",
"    *smcPageGroup*segTable.foreground:			ivory2",
"    *smcPageGroup*background:				black",
"    *smcPageGroup*foreground:				yellow2",
"    *smcPageGroup*Viewport.allowVert:           	True",
"    *smcPageGroup*Viewport.allowHoriz:          	False",
"    *smcPageGroup*Viewport.useRight:            	False",
"    *smcPageGroup*Viewport.resizeable:          	True",
"    *smcPageGroup*Scrollbar.width:              	15",
"    *smcPageGroup*Scrollbar.minimumThumb:       	15",
"    *smcPageGroup*Scrollbar.background:         	#c0c0c0",
"    *smcPageGroup*HTML.width:                      	600",
"    *smcPageGroup*HTML.height:                     	512",
"    *smcPageGroup*HTML.anchorUnderlines:           	1",
"    *smcPageGroup*HTML.visitedAnchorUnderlines:    	1",
"    *smcPageGroup*HTML.verticalScrollOnRight:      	True",
"    *smcPageGroup*HTML.plainFont:                  	7x13",
"    *smcPageGroup*HTML.marginWidth:                	5",
"    *smcPageGroup*HTML.marginHeight:               	5",
"    *smcPageGroup*HTML*scrollVertical:             	Always",
"    *smcPageGroup*HTML*scrollHorizontal:           	Never",
"",
"    *smcPageGroup.location:                     	0 0 460 200",
"    *smcPageLayout.borderWidth:                 	3",
"    *smcPageLayout.layout: horizontal { \\",
"        segTabFrame \\",
"    }",
"",
"    *smcPageGroup*Text*displayCaret:             	False",
"    *smcPageGroup*Text*scrollVertical:           	never",
"    *smcPageGroup*Text*scrollHorizontal:         	never",
"    *smcPageGroup*Text*editType:                 	read",
"",
"",
"",
"    !##########################",
"    ! Logfile box resources.",
"    !##########################",
"    *log.geometry:                              650x256",
"    *log.title:                                 Message Bus Event Logfile",
"    *log*Command.font:                          7x13bold",
"    *log*Scrollbar*background:                  ivory3",
"    *log*Scrollbar*width:                       17",
"    *log*Scrollbar*height:                      17",
"    *log*Scrollbar*shadowWidth:                 2",
"    *log*Scrollbar*cursorName:                  top_left_arrow",
"    *log*Scrollbar*pushThumb:                   true",
"",
"    *logDone.label:                             Done",
"    *logClear.label:                            Clear",
"    *logfile*background:                        ivory2",
"    *logfile*foreground:                        black",
"    *logfile*scrollVertical:                    always",
"    *logfile*scrollHorizontal:                  always",
"    *logfile*displayCaret:                      False",
"    *logfile*editType:                          append",
"",
"",
"",
"    !##########################",
"    ! Define a Debug Tcl shell.",
"    !##########################",
"    *tclShell.width:                            600",
"    *tclShell.height:                           150",
"    *tclShell.title:                            Debug TCL Command Entry",
"",
"    *tclLayout*borderWidth:                     0",
"    *tclLayout*Frame.frameType:                 sunken",
"    *tclLayout*Frame.frameWidth:                2",
"    *tclLayout*Text*editType:                   edit",
"    *tclLayout.layout:  vertical { \\",
"        0 < +0 -0 > \\",
"        tclCmdGroup   < +inf -inf * > \\",
"        tclFrame < +inf -inf * +inf -inf> \\",
"        0 < +0 -0 > \\",
"    }",
"",
"",
"    !------------------------------------",
"    ! Do the command bar group resources.",
"    !------------------------------------",
"    *tclCmdGroup.label:         ",
"    *tclCmdGroup.outerOffset:                   0",
"    *tclCmdGroup.innerOffset:                   0",
"    *tclCmd.background:                         gray80",
"    *tclCmd.layout: vertical { \\",
"        5 \\",
"        horizontal { \\",
"            5 \\",
"            tclClear   1 \\",
"            tclExecute   \\",
"            tclCoords < +inf -inf * >  \\",
"            10 < +inf -10>    \\",
"            tclDismiss   \\",
"            5 \\",
"        } \\",
"        5 \\",
"    }",
"    *tclClear.label:                            Clear",
"    *tclExecute.label:                          Execute",
"    *tclCoords.label:",
"    *tclDismiss.label:                          Dismiss",
"",
"",
"",
"",
"    !##########################",
"    ! WARNING dialog.",
"    !##########################",
"    *warnShell.geometry:                          +400+300",
"    *warnShell*borderWidth:                       0",
"    *warnShell*TextBox.frameWidth:                0",
"",
"    *warn.layout: vertical { \\",
"        5 < -5  > \\",
"        horizontal { 5 warnFrame < +inf * +inf > 5 } \\",
"        5 < -5  > \\",
"        horizontal { \\",
"            10 \\",
"            warnOk < +inf * > \\",
"            5 < +inf -5 > \\",
"            warnCancel < +inf * > \\",
"            10 \\",
"        } \\",
"        5 < -5  > \\",
"    }",
"    *warnOk.label:                              Okay",
"    *warnCancel.label:                          Cancel",
"",
"    *WFlayout.layout: horizontal { \\",
"        5 < -5  > \\",
"        vertical { 5 < +inf -5 > warnIcon 5 < +inf -5 > } \\",
"        5 < -5  > \\",
"        warnText < +inf -inf *  +inf -inf > \\",
"        5 < -5  > \\",
"    }",
"",
"    *warnLabel.label:                           Warning",
"    *warnLabel.width:                           300",
"    *warnLabel.height:                          20",
"    *warnFrame.frameType:                       sunken",
"    *warnFrame.frameWidth:                      2",
"    *warnIcon.location:                         0 0 40 40",
"    *warnIcon.image:                            WARNING",
"    *warnText.label:                            generic warning text",
"    *warnText.width:                            270",
"    *warnText.height:                           60",
"    !*warnText.background:                       gray77",
"",
"",
"",
"    !##########################",
"    ! Help panel resources.",
"    !##########################",
"    *help_panel.title:				Supervisor Help Summary",
"    *help_panel.width:				500",
"    *help_panel.height:				550",
"    *helpLayout*borderWidth:			0",
"    *helpLayout*Command.internalHeight:		4",
"    *helpLayout*Command.internalWidth:		12",
"    *helpLayout*HTML*shadowWidth:		1",
"    *helpLayout*helpText*Scrollbar.shadowWidth:		1",
"",
"    *helpMenuGroup.label:               ",
"    *helpMenuGroup.height:                      45",
"    *helpMenuGroup.outerOffset:                 0",
"    *helpMenuGroup.innerOffset:                 0",
"    *helpMenuGroup.frameType:			raised",
"    *helpMenubar.layout: vertical { \\",
"	5 < -5 > \\",
"	horizontal { 20 < +inf -20 > helpClose 7 } \\",
"	5 < -5 > \\",
"    }",
"    *helpBack.label:				Back",
"    *helpBack.sensitive:			False",
"    *helpForward.label:				Forward",
"    *helpForward.sensitive:			False",
"    *helpHome.label:				Home",
"    *helpClose.label:				Dismiss",
"",
"",
"    *hfEntry*editType:                          edit",
"    *hfEntry*font:                              7x13",
"    *hfEntry*displayCaret:                      True",
"    *hfFrame.frameWidth:			1",
"    *hfFrame.frameType:				sunken",
"    *hfFrame.width:				250",
"    *hfFind.label:                              Search",
"    *hfFind.shadowWidth:                        1",
"    *hfClear.label:                             Clear",
"    *hfClear.shadowWidth:                       1",
"",
"    *helpLayout.layout:	vertical { \\",
"	-1 \\",
"	horizontal { helpMenuGroup < +inf -inf * > 	     } \\",
"	5 \\",
"        horizontal { \\",
"            5 \\",
"	    helpBack 2 helpForward 2 helpHome \\",
"	    20 < +inf -20 > \\",
"            hfFrame < +inf -inf * > 3 hfFind 1 hfClear \\",
"            5 \\",
"        } \\",
"	5 \\",
"	horizontal { helpTextFrame < +inf -inf * +inf -inf > } \\",
"	-1 \\",
"    }",
"    *helpTextFrame.frameWidth:			1",
"    *helpTextFrame.frameType:			sunken",
"    *helpText.width:				600",
"    *helpText.height:				500",
"    *helpText.anchorUnderlines:			1",
"    *helpText.visitedAnchorUnderlines:		1",
"    *helpText.verticalScrollOnRight:		true",
"    *helpText*Scrollbar.shadowWidth:		1",
"    *helpText.plainFont:       -adobe-courier-medium-r-normal-*-12-*-*-*-*-*-*-*",
"    *helpText.plainboldFont:   -adobe-courier-bold-r-normal-*-12-*-*-*-*-*-*-*",
"    *helpText.plainitalicFont: -adobe-courier-medium-o-normal-*-12-*-*-*-*-*-*-*",
"!   *helpText.boldFont:				6x12bold",
"",
"",
"",
"    !-----------------------------------------------------",
"    !  Menu resources giving a shadow effect on dividers.",
"    !-----------------------------------------------------",
"    *DHSSupervisor*SimpleMenu*background:		gray75",
"    *DHSSupervisor*SimpleMenu*foreground:		black",
"    *DHSSupervisor*SimpleMenu.borderWidth:		1",
"    *DHSSupervisor*SimpleMenu.menuLabel.foreground:	black",
"    *DHSSupervisor*SimpleMenu.line1.foreground:		gray61",
"    *DHSSupervisor*SimpleMenu.line2.foreground:		gray91",
"    *DHSSupervisor*SimpleMenu.line3.foreground:		gray61",
"    *DHSSupervisor*SimpleMenu.line4.foreground:		gray91",
"    *DHSSupervisor*SimpleMenu.line5.foreground:		gray61",
"    *DHSSupervisor*SimpleMenu.line6.foreground:		gray91",
"    *DHSSupervisor*SimpleMenu.line7.foreground:		gray61",
"    *DHSSupervisor*SimpleMenu.line8.foreground:		gray91",
"    *DHSSupervisor*SimpleMenu.line9.foreground:		gray61",
"    *DHSSupervisor*SimpleMenu.line10.foreground:	gray91",
"    *DHSSupervisor*SimpleMenu.line11.foreground:	gray61",
"    *DHSSupervisor*SimpleMenu.line12.foreground:	gray91",
"    *DHSSupervisor*SimpleMenu.line13.foreground:	gray61",
"    *DHSSupervisor*SimpleMenu.line14.foreground:	gray91",
"    *DHSSupervisor*SimpleMenu.line15.foreground:	gray61",
"",
"    ! The following define resources to produce a 3-D scrollbar with arrows.",
"    *Scrollbar*background:            			#c0c0c0",
"    *Scrollbar*width:                 			15",
"    *Scrollbar*height:                			15",
"    *Scrollbar*shadowWidth:           			2",
"",
"",
"}",
"",
"set UIActCallbacks(DHSSupervisor)   { }",
"set UIDeactCallbacks(DHSSupervisor) { }",
"",
"",
"################################################################################",
"# Global Variables.",
"################################################################################",
"",
"set configPath		\"./\"		;# config file path",
"set defaultConfig	none		;# startup default configuration",
"",
"set Module(arg)		    	{}	;# user configuration files",
"set config(task)	    	{}	;# task configuration array",
"set config(task,widget)	    	{}	;# widget configuration array",
"set config(task,Realized)   	{}	;# module has been realized",
"set config(task,Activated)  	{}	;# module has been activated",
"",
"set debug 		    	0	;# it ain't the same w/out a debug flag",
"set err_msgs		    	\"\"",
"",
"set winClose 		    	1	;# close on quit",
"",
"set debug               -",
"set imtype              \"\"",
"set cur_geom            \"2x2\"",
"",
"set df_cmd              \"/bin/df -k\"    ;# MACHDEP",
"set stdimage            \"imt4400\"	;# make it big enough for detector",
"set curdir              \"/home/data/\"   ;# for disk monitor",
"set rdir                \"/home/data/\"   ;# for disk monitor",
"set pdir                \"/home/data/\"   ;# for disk monitor",
"",
"",
"",
"",
"# Constants",
"#------------",
"",
"",
"",
"################################################################################",
"# Bootstrap procedures used during the startup process.",
"################################################################################",
"",
"# Given the max number of widgets we'll be using create the object definition",
"# for the GUI we can append to the UIObjects string before startup.",
"",
"proc BuildObjects args {",
"    global UIObjects UIResources",
"",
"    set widgets \"\"",
"",
"    # Append the objects to the object list.",
"    append UIObjects(DHSSupervisor) $widgets",
"}",
"",
"",
"# Load the .dhs_rc config file.",
"proc LoadConfigFile args {",
"    global dhs_rc defaultConfig configPath err_msgs",
"",
"    # If we have a .dhs file use it for the startup.",
"    # the GUI resource values",
"    set file $dhs_rc",
"    if { [file exists $file] } {",
"	if { [ catch {source $file} err] } {",
"	    print \".dhs_rc file read error\\n$err\"",
"	    append err_msgs \".dhs_rc file read error\\n$err\"",
"	}",
"    }",
"}",
"",
"# Read the named UI configuration file.",
"proc ReadConfigFile { fname args } {",
"   ",
"    set fd [ open $fname r ]",
"",
"    # Read the config file a line at a time so we can strip comments and",
"    # blank lines to make the parsing easier.",
"    set uidef \"\"",
"    while { ! [ eof $fd ] } {",
"	gets $fd line",
"",
"	# Strip any comments and blank lines.",
"	if { [ string first \"#\" $line ] >= 0 } {",
"	    set line [ string range $line 0 [ expr [string first \"#\" $line]-1] ]",
"	    set line [ string trimright $line ]",
"	}",
"	if { $line == \"\" } { continue } ",
"",
"	# Append the line to the output description.",
"	set uidef [ format \"%s\\n%s\" $uidef $line ]",
"    }",
"",
"    close $fd",
"    return $uidef",
"}",
"",
"# Scan the config directories getting a list of User-UI files.",
"proc ScanConfigDirs args {",
"    global Module configPath UIObjects UIResources UIActCallbacks",
"    global gvar err_msgs",
"",
"    set path [ format \"./:%s\" $configPath ]",
"    foreach dir	[ split $path : ] { ",
"	set ui_files [ glob -nocomplain [ format \"%s/*.ui\" $dir ] ]",
"	foreach fil $ui_files {",
"	    set task [ file tail [ file rootname $fil ] ]",
"	    if { ! [info exists Module($task) ] } {",
"	        set Module($task) [ format \"%s\" $fil ]",
"",
"		# Open the UI file to set any objects/resources defined.",
"		# This will also pick up any callback procedures declared.",
"		set text [ ReadConfigFile $fil ]",
"",
"		if {[catch { eval $text } err] } {",
"		    print \"'${task}.ui' file bootstrap error\\n'$err'\"",
"	    	    append err_msgs \".xgtermrc file read error\\n$err\"",
"		} else {",
"		    if {[info exists Objects]} {",
"			set UIObjects($task) $Objects",
"			unset Objects",
"		    }",
"		    if {[info exists Resources]} {",
"			set UIResources($task) $Resources",
"			unset Resources",
"		    }",
"		    if {[info exists ActivateCallbacks]} {",
"			set UIActCallbacks($task) $ActivateCallbacks",
"			unset ActivateCallbacks",
"		    }",
"		    if {[info exists DeactivateCallbacks]} {",
"			set UIDeactCallbacks($task) $DeactivateCallbacks",
"			unset DeactivateCallbacks",
"		    }",
"		}",
"	    }",
"	}",
"	set ui_files \"\"",
"    }",
"}",
"",
"#==============================================================================",
"# Initialize the widget tree.",
"#==============================================================================",
"",
"proc InitWidgetTree args {",
"    global UIObjects UIResources",
"",
"    # Initialize the string with the base GUI objects/resources.",
"    set guiResources \\",
"        [format \"DHSSupervisor*objects:%s\\n%s\" \\",
"	    $UIObjects(DHSSupervisor) $UIResources(DHSSupervisor)]",
"",
"    # Add a new objects description for each of the plugins found so we can",
"    # create them by name later rather that with the defaults.",
"    foreach task [array names UIObjects] {",
"	if {$task != \"DHSSupervisor\"} {",
"	    set guiResources \\",
"	        [ format \"%s\\n\\n*%s_objects:%s\\n%s\" \\",
"		    $guiResources $task \\",
"		    $UIObjects($task) $UIResources($task) ]",
"	}",
"    }",
"",
"    # Define all of the UI objects and resources.",
"    appInitialize rtdStatus DHSSupervisor $guiResources",
"}",
"",
"#==============================================================================",
"# Realize a plugin module, i.e. create it's objects and attach callbacks.",
"# We only do this once and set a flag to indicate the objects have been ",
"# created so we don't do it on subsequent realizations.",
"#==============================================================================",
"",
"proc Realize { module args } {",
"    global config UIActCallbacks UIObjects",
"",
"    if { [info exists config($module,Realized)] } {",
"	return",
"    }",
"",
"    # Create any widgets for the module.  We only do this once and set a",
"    # flag to indicate the objects have been created so we don't do it on",
"    # subsequent realizations.",
"    if { [info exists UIObjects($module)] } {",
"        createObjects [format \"%s_objects\" $module]",
"        reset-server",
"    }",
"",
"    # Add any callback that are defined for procedures in the module.",
"    if { [info exists UIActCallbacks($module)] } {",
"	foreach cb $UIActCallbacks($module) {",
"	    eval $cb",
"	}",
"    }",
"",
"    set config($module,Realized) 1",
"}",
"",
"",
"",
"",
"################################################################################",
"# Bootstrap the GUI.",
"################################################################################",
"",
"# Load the .xgtermrc config file.",
"#LoadConfigFile",
"",
"# Scan the config directories getting a list of User-UI files.",
"#ScanConfigDirs",
"",
"# Create the userbar widgets based on the number of widgets defined.",
"BuildObjects",
"",
"# Initialize the widget tree.",
"InitWidgetTree",
"",
"# Realize the plugins with widgets needed for the base GUI.  All other ",
"# modules have already loaded their procedures so we can automatically",
"# access e.g. debug print routines at this point.",
"Realize tclShell",
"Realize warning",
"Realize filename",
"Realize log",
"",
"",
"################################################################################",
"# Crank it up...",
"################################################################################",
"",
"# Create the objects and initialize the Gterm widgets in the main GUI.",
"# We will create the objects for plugin modules when they are realized to",
"# speed startup times.",
"",
"createObjects",
"send diskuse setGterm ; send diskuse activate",
"",
"",
"# Setup the close-window button",
"createBitmap CloseBM 16 16 {",
"    0x00,0x00,0xfc,0x3f,0x02,0x60,0x02,0x50,0xf2,0x6f,0xf2,0x5f,0xf2,0x6f,0xf2,",
"    0x5f,0xf2,0x6f,0xf2,0x5f,0xf2,0x6f,0xf2,0x5f,0xaa,0x6a,0x54,0x55,0xfc,0x3f,",
"    0x00,0x00}",
"",
"",
"",
"",
"################################################################################",
"send smcPageGroup set height 270",
"send segTabFrame set frameWidth 0",
"",
"",
"send pResLabels set font 7x13bold",
"send pResLabels set foreground cyan",
"send pResLabels append {  \\",
" Process    Host        PID    TID    Port Time    Status }",
"",
"#send pResText set font 7x13",
"#send pResText set foreground yellow2",
"#send pResText append {\\",
"# Supervisor denali        12023  127467 3500   14:32:03 Connected",
"# Collector  lechat        9705   127465        14:54:03 Connected",
"# Collector  allegheny     9705   127465        14:54:03 Connected",
"# Pan        pan1          4404          3509   14:54:03 Connected",
"# Pan        pan2          3735          3510   14:54:03 Connected",
"# RTD        lechat        4404   123456        14:54:03 Connected",
"# RTD        allegheny     3735   123457        14:54:03 Connected",
"# Picfeed    lechat        4404   123458        14:54:03 Connected",
"# Picfeed    allegheny     3735   123459        14:54:03 Connected",
"# DCA        allegheny     3735   123460        14:54:03 Connected",
"#}",
"",
"",
"send pResText set font 7x13",
"send pResText set background grey15",
"send pResText set foreground yellow2",
"send pResText set highlightBackground grey15",
"send pResText set highlightForeground white",
"send pResText set shadeSurplus False",
"send pResText setList {\\",
"} resize",
"#send pResText setList {\\",
"# {Supervisor denali      12023  127467 3500 14:32:03 Connected} \\",
"# {Collector  lechat      9705   127465      14:54:03 Connected} \\",
"# {Collector  allegheny   9705   127465      14:54:03 Connected} \\",
"# {Collector  allegheny   9705   127465      14:54:03 Connected} \\",
"# {Collector  allegheny   9705   127465      14:54:03 Connected} \\",
"# {Collector  allegheny   9705   127465      14:54:03 Connected} \\",
"# {Pan        pan1        4404          3509 14:54:03 Connected} \\",
"# {Pan        pan2        3735          3510 14:54:03 Connected} \\",
"# {RTD        lechat      4404   123456      14:54:03 Connected} \\",
"# {RTD        allegheny   3735   123457      14:54:03 Connected} \\",
"# {Picfeed    lechat      4404   123458      14:54:03 Connected} \\",
"# {Picfeed    allegheny   3735   123459      14:54:03 Connected} \\",
"# {DCA        dcamachine  3735   123460      14:54:03 Connected} \\",
"# {DCA        dcamachine  3735   123460      14:54:03 Connected} \\",
"# {DCA        dcamachine  3735   123460      14:54:03 Connected} \\",
"# {DCA        dcamachine  3735   123460      14:54:03 Connected} \\",
"# {DCA        dcamachine  3735   123460      14:54:03 Connected} \\",
"# {DCA        dcamachine  3735   123460      14:54:03 Connected} \\",
"#} resize",
"",
"proc setWarning { param old new } {",
"    if { $new == \"on\" } {",
"	send pResText set background red",
"	send smcCmdGroup set background red",
"	send smcLayout set background red",
"    } else {",
"	send pResText set background grey15",
"	send smcCmdGroup set background grey15",
"	send smcLayout set background grey15",
"    }",
"} ; send warning addCallback setWarning",
"",
"",
"send pTransLabels set font 7x13bold",
"send pTransLabels set background grey15",
"send pTransLabels set foreground cyan",
"send pTransLabels set width 220",
"send pTransLabels append {  Collector Transfer Summary: }",
"",
"send pTransText set font 7x13",
"send pTransText set background grey15",
"send pTransText set foreground yellow2",
"send pTransText set highlightBackground grey15",
"send pTransText set highlightForeground white",
"send pTransText set shadeSurplus False",
"send pTransText setList {\\",
"  \\ \\",
"  \\ \\",
"  \\ \\",
"  \\ \\",
"  \\ \\",
"} resize",
"#send pTransText setList {\\",
"# {pan1:4404   -> lechat:9705	 65535 bytes  @ 14:54:03  } \\",
"# {pan2:4404   -> allegheny:9705   65535 bytes  @ 14:54:03 } \\",
"# {pan2:4404   -> allegheny:9705   65535 bytes  @ 14:54:03 } \\",
"# {pan2:4404   -> allegheny:9705   65535 bytes  @ 14:54:03 } \\",
"# {pan2:4404   -> allegheny:9705   65535 bytes  @ 14:54:03 } \\",
"#} resize",
"",
"send pTransStat set font 7x13",
"send pTransStat set foreground yellow2",
"send pTransStat append {\\",
"    Exp:                Obs: ",
"}",
"",
"",
"send pFilesLabels set font 7x13bold",
"send pFilesLabels set background grey15",
"send pFilesLabels set foreground cyan",
"send pFilesLabels set width 160",
"send pFilesLabels append {   DCA File creation: }",
"",
"send pFilesStat set font 7x13",
"send pFilesStat set foreground yellow2",
"send pFilesStat append {\\",
"    Received Packets:       0 header      0 data",
"}",
"",
"send pFilesText set font 7x13",
"send pFilesText set foreground yellow2",
"send pFilesText set height 60",
"",
"proc setProcActive { param old new } {",
"    send pResText highlight $new",
"} ; send procActive addCallback setProcActive",
"",
"proc setProcTab { param old new } {",
"    send pResText setList $new resize",
"} ; send procTab addCallback setProcTab",
"",
"proc setTransTab { param old new } {",
"    send pTransText setList $new",
"} ; send transTab addCallback setTransTab",
"",
"",
"proc setTransStat { param old new } {",
"    set e [lindex $new 0]",
"    set o [lindex $new 1]",
"    send pTransStat set string \\",
"	[format \"Exp: %s Obs: %s\" $e $o]",
"    send expidVal set label $e",
"    send obsidVal set label $o",
"",
"    # Before we do any processing, update the client with the image",
"    # root name in case the user forgot to enter a <cr>",
"    #send client setOption froot [send rrootValue get string]",
"",
"} ; send transStat addCallback setTransStat",
"",
"",
"proc setFilesTab { param old new } {",
"    send pFilesText set string $new",
"} ; send filesTab addCallback setFilesTab",
"",
"proc setDCAStat { param old new } {",
"    set h [lindex $new 0]",
"    set d [lindex $new 1]",
"    #send pFilesStat set foreground white",
"    send pFilesStat set string \\",
"	[format \"Received Packets:  %6s header %6s data\" $h $d]",
"",
"} ; send dcaTransStat addCallback setDCAStat",
"",
"",
"send procReset  addCallback { send pResText set background grey15 }",
"send procUpdate addCallback { send client procUpdate }",
"send procClean  addCallback { send client procClean  }",
"",
"",
"",
"################################################################################",
"# Path/Node Option Callbacks",
"################################################################################",
"",
"",
"#send rdirValue	  set string 	\"/home/data\"",
"#send pdirValue	  set string 	\"/home/data\"",
"#send rrootValue  set string 	\"image\"",
"#send ofFileValue set string 	\"None\"",
"send ktmValue	  set string 	\"/dhs/lib/ktm.tcl\"",
"send syspValue	  set string 	\"/dhs/lib/sysproc\"",
"send postpValue	  set string 	\"/dhs/lib/postproc\"",
"",
"set  sysproc_cmd	\"/dhs/lib/sysproc\"",
"set  postproc_cmd	\"/dhs/lib/postproc\"",
"",
"",
"#  Callbacks when an entry is made in the GUI.",
"proc getRDirectory { widget mode value } {",
"    global curdir",
"",
"    send client setOption rdirname $value",
"    set curdir $value",
"    getDiskUsed $curdir",
"",
"} ; send rdirValue addCallback getRDirectory",
"",
"proc getPDirectory { widget mode value } {",
"    send client setOption pdirname $value",
"} ; send pdirValue addCallback getPDirectory",
"",
"proc getFRoot { widget mode value } {",
"    send client setOption froot $value",
"} ; send rrootValue addCallback getFRoot",
"",
"proc getKTM { widget mode value } {",
"    send client setOption ktm $value",
"} ; send ktmValue addCallback getKTM",
"",
"proc getPostproc { widget mode value } {",
"    send client setOption postproc $value",
"} ; send postpValue addCallback getPostproc",
"",
"proc getSysproc { widget mode value } {",
"    send client setOption sysproc $value",
"} ; send syspValue addCallback getSysproc",
"",
"",
"#  Apply button callbacks",
"proc applyFRoot { args } {",
"    send client setOption froot    [send rrootValue get string]",
"} ; send rrootApply addCallback applyFRoot",
"",
"proc applyRDir { args } {",
"    send client setOption rdirname [send rdirValue get string]",
"} ; send rdirApply addCallback applyRDir",
"",
"proc applyPDir { args } {",
"    send client setOption pdirname [send pdirValue get string]",
"} ; send pdirApply addCallback applyPDir",
"",
"proc applyOTFName { args } {",
"} ; send rrootApply addCallback applyFRoot",
"",
"proc applyKTM { args } {",
"    send client setOption ktm [send ktmValue get string]",
"} ; send ktmApply addCallback applyKTM",
"",
"proc applyPostProc { args } {",
"    send client setOption postproc [send postpValue get string]",
"} ; send postpApply addCallback applyPostProc",
"",
"proc applySysProc { args } {",
"    send client setOption sysproc [send syspValue get string]",
"} ; send syspApply addCallback applySysProc",
"",
"",
"",
"#  Callbacks when the client sends us a value",
"proc setRDirectory { param old new } {",
"    global rdir curdir",
"",
"    send rdirValue set string $new",
"    set curdir $new",
"    set rdir $new",
"    getDiskUsed $curdir",
"} ; send rdirname addCallback setRDirectory",
"",
"proc setPDirectory { param old new } {",
"    send pdirValue set string $new",
"} ; send pdirname addCallback setPDirectory",
"",
"proc setFRoot { param old new } {",
"    send rrootValue set string $new",
"} ; send froot addCallback setFRoot",
"",
"proc setSeqnum { param old new } {",
"    send seqnumValue set label [ format \"%05d\" $new ]",
"} ; send seqno addCallback setSeqnum",
"",
"proc setKTM { param old new } {",
"    send ktmValue set string $new",
"} ; send ktm_p addCallback setKTM",
"",
"proc setSysproc { param old new } {",
"    send syspValue set string $new",
"    set  sysproc_cmd $new",
"} ; send sysproc_p addCallback setSysproc",
"",
"proc setPostproc { param old new } {",
"    send postpValue set string $new",
"    set  postproc_cmd $new",
"} ; send postproc_p addCallback setPostproc",
"",
"proc setDCADone { param old new } {",
"    set expID [lindex $new 0]",
"    set path  [lindex $new 1]",
"",
"    send pFilesText append [ format \" %s --> %s \\n\" $expID $path ]",
"",
"} ; send dcaStat addCallback setDCADone",
"",
"",
"proc doDCADone { param old new } {",
"    global sysproc_cmd postproc_cmd debug curdir rdir pdir",
"",
"",
"    set expID  [lindex $new 0]",
"    set file   [lindex $new 1]",
"    set rawDir [lindex $new 2]",
"",
"    set rdir   [send rdirValue get string]",
"    set pdir   [send pdirValue get string]",
"",
"    # Update the client in case the user forgot to hit <CR> when",
"    # changing paths.",
"    send client setOption rdirname $rdir",
"    set curdir $rdir",
"    getDiskUsed $curdir",
"    send client setOption pdirname $pdir",
"",
"",
"    # Execute the 'sysproc' archiving script.  This command can be set",
"    # with a GUI resource but cannot be disabled by the user.  If the",
"    # string is empty we don't do anything.",
"",
"    if { $debug == 1 } {",
"        exec sh -c \"echo sysproc $expID $file $rdir $pdir > /dev/tty\"",
"    }",
"    if { [ string compare $sysproc_cmd \"\" ] != 0 } {",
"        catch { exec sh -c \"($sysproc_cmd $expID $file $rawDir $pdir)\" & }",
"    }",
"",
"",
"    # Execute the 'postproc' user script.  If the string is empty we don't ",
"    # do anything.",
"",
"    if { $debug == 1 } {",
"        exec sh -c \"echo postproc $expID $file $rdir $pdir > /dev/tty\"",
"    }",
"    if { [ string compare $postproc_cmd \"\" ] != 0 } {",
"#       catch { exec sh -c \"($postproc_cmd $expID $file $rawDir $pdir)\" & }",
"        catch { exec sh -c \"($postproc_cmd $expID $file $rdir $pdir)\" & }",
"    }",
"",
"",
"    # Restore some of the colors....",
"    #send pFilesStat set foreground yellow2",
"    send pResText set background grey15",
"",
"} ; send dca_done addCallback doDCADone",
"",
"",
"",
"################################################################################",
"# Processing Queue Callbacks",
"################################################################################",
"",
"set dataWaiting		0",
"set dataInterval	1000		;# 1 second polling",
"#set dataInterval	500		;# 1/2 second polling",
"set dataTimerId		0",
"",
"set hbInterval		2000		;# 2 second heartbeat",
"#set hbInterval		500		;# 1/2 second heartbeat",
"set hbTimerId		0",
"    ",
"proc hbTimer args {",
"    global hbTimerId hbInterval",
"",
"#print [format \"GUI: In hbTimer: id=%d\" $hbTimerId]",
"    send client setOption no-op 1",
"    #send client smcUpdate",
"    deleteTimedCallback $hbTimerId	# delete old timer",
"    set hbTimerId [postTimedCallback hbTimer $hbInterval]",
"}",
"",
"# Wait the 20 second startup time before initiating the hearbeat timer.",
"#set hbTimerId [postTimedCallback hbTimer 20000]",
"set hbTimerId [postTimedCallback hbTimer 2000]",
"",
"",
"proc setDataWaiting { param old new } {",
"    global dataWaiting dataTimerId dataInterval",
"",
"    set val [lindex $new 1]",
"    set dataWaiting $val",
"",
"    # No timer now running, but data waiting....",
"    if {$dataTimerId == 0 && $val > 0} {",
"	#dataTimer",
"        set dataTimerId [postTimedCallback dataTimer $dataInterval]",
"    }",
"",
"} ; send dataFlag addCallback setDataWaiting",
"",
"",
"proc dataTimer args {",
"    global dataWaiting dataTimerId dataInterval",
"",
"",
"#print [format \"GUI: In DataTimer: wait=%d  id=%d\" $dataWaiting $dataTimerId]",
"    send client smcProcNext",
"",
"    # Timer id reset when we left the panel.",
"    deleteTimedCallback $dataTimerId		# delete old timer",
"    if {$dataWaiting > 0} {",
"        set dataTimerId [postTimedCallback dataTimer $dataInterval]",
"    } else {",
"	set dataTimerId 0",
"    }",
"}",
"",
"",
"",
"################################################################################",
"# GUI Option Callbacks",
"################################################################################",
"",
"",
"proc toggleVerbose { widget type value } {",
"    send client setOption verbose $value",
"} ; send pTransOpt addCallback toggleVerbose",
"",
"proc toggleActivity { widget type value } {",
"    send client setOption showActivity $value",
"} ; send pResActivity addCallback toggleActivity",
"",
"",
"proc setVerbose { param old new } {",
"    send pTransOpt set on $new",
"} ; send verbose addCallback setVerbose",
"",
"proc setActivity { param old new } {",
"    send pResActivity set on $new",
"} ; send showActivity addCallback setVerbose",
"",
"",
"",
"",
"################################################################################",
"# DEBUG OPTIONS",
"################################################################################",
"",
"proc toggleDebug { widget type value } {",
"    switch $widget {",
"	supDebug   { send client setOption debug super $value		}",
"	ioDebug    { send client setOption debug io $value		}",
"	sockDebug  { send client setOption debug socket $value		}",
"	srDebug    { send client setOption debug sendrec $value		}",
"	confDebug  { send client setOption debug conf $value		}",
"	procDebug  { send client setOption debug proc $value		}",
"	queDebug   { send client setOption debug queue $value		}",
"	colDebug   { send client setOption debug collector $value	}",
"	pxfDebug   { send client setOption debug pxf $value		}",
"	smcDebug   { send client setOption debug smc $value		}",
"	mbDebug    { send client setOption debug mbus $value		}",
"	allDebug   { send client setOption debug all $value		",
"		     foreach w { supDebug ioDebug sockDebug srDebug \\",
"				confDebug procDebug queDebug colDebug \\",
"				pxfDebug smcDebug mbDebug allDebug } {",
"			send $w set on $value",
"		     }",
"		     if {$value} {",
"			send allDebug set label \"None\"",
"		     } else {",
"			send allDebug set label \"All\"",
"		     }",
"		   }",
"    }",
"}",
"",
"foreach w { supDebug ioDebug sockDebug srDebug confDebug procDebug queDebug colDebug pxfDebug smcDebug mbDebug allDebug } {",
"    send $w  addCallback toggleDebug ",
"}",
"",
"################################################################################",
"# Menu Definitions",
"################################################################################",
"",
"createMenu fileMenu fileButton {",
"    {\"File Options\" 		f.title     			  }",
"    {				f.dblline   			  }",
"    {\"Show message log\"		f.exec  { logOpen               } }",
"    {\"Debug Tcl Shell\"		f.exec  { tclOpen 		} }",
"    {				f.dblline			  }",
"    {\"Quit\"  			f.exec  { Quit 			} }",
"}",
"",
"createMenu stdimMenu stdimgButton {",
"    { \"imt8800\" f.exec { send client setOption stdimg 41 	} }",
"    { \"imt4400\" f.exec { send client setOption stdimg 42 	} }",
"    { \"imt2200\" f.exec { send client setOption stdimg 43 	} }",
"    { \"imt1100\" f.exec { send client setOption stdimg 44 	} }",
"    { \"imt800 \" f.exec { send client setOption stdimg 2  	} }",
"    { \"imt512 \" f.exec { send client setOption stdimg 1  	} }",
"}",
"",
"createMenu frameMenu dframeButton {",
"    { \" 1\" 	f.exec { send client setOption frame 1  	} }",
"    { \" 2\" 	f.exec { send client setOption frame 2  	} }",
"    { \" 3\" 	f.exec { send client setOption frame 3  	} }",
"    { \" 4\" 	f.exec { send client setOption frame 4  	} }",
"    { \" 5\" 	f.exec { send client setOption frame 5  	} }",
"    { \" 6\" 	f.exec { send client setOption frame 6  	} }",
"    { \" 7\" 	f.exec { send client setOption frame 7  	} }",
"    { \" 8\" 	f.exec { send client setOption frame 8  	} }",
"    { \" 9\" 	f.exec { send client setOption frame 9  	} }",
"    { \"10\" 	f.exec { send client setOption frame 10 	} }",
"    { \"11\" 	f.exec { send client setOption frame 11 	} }",
"    { \"12\" 	f.exec { send client setOption frame 12 	} }",
"    { \"13\" 	f.exec { send client setOption frame 13 	} }",
"    { \"14\" 	f.exec { send client setOption frame 14 	} }",
"    { \"15\" 	f.exec { send client setOption frame 15 	} }",
"    { \"16\" 	f.exec { send client setOption frame 16 	} }",
"    {				f.dblline			  }",
"    { \" Cycle\" 	f.exec { send client setOption frame 1  	} }",
"}",
"",
"",
"",
"################################################################################",
"# Utility Callbacks",
"################################################################################",
"",
"# Wrapper routine to execute a callback command while ignoring the extra",
"# arguments from the widget such as widget name, mode, etc.",
"proc Exec { cmd args } { eval $cmd		 }",
"",
"# Procedures to test True/False strings in resources.",
"proc true  { v } \\",
"   { expr { $v==\"true\"  || $v==\"True\"  || $v==\"TRUE\"  || $v==1 || $v==\"yes\" }",
"}",
"proc false { v } \\",
"   { expr { $v==\"false\" || $v==\"False\" || $v==\"FALSE\" || $v==0 || $v==\"no\"  }",
"}",
"",
"# No-op procedure for text widgets with no callbacks to swallow newline.",
"proc noop args { }",
"",
"# Common functions.",
"proc min { a b } { expr {($a < $b) ? $a : $b} }",
"proc max { a b } { expr {($a > $b) ? $a : $b} }",
"",
"# Dereference a variable.  E.g. in we define vars x[1-5] and want to use them",
"# in a loop later we can't simply access \"$x$i\" to get the value of '$x1',",
"# instead we use \"[GetVal x$i]\" to return the value of '$x1'. 'GV' is the",
"# shorthand version.",
"",
"proc GetVal { in } { upvar $in out ; return $out }",
"proc GV     { in } { upvar #0 $in out ; return $out }",
"",
"",
"",
"################################################################################",
"# Standard Keystroke Procedures",
"################################################################################",
"",
"#proc Help args   {  ",
"#} ; send helpButton addCallback Help",
"",
"proc Quit args   { ",
"    global winClose",
"    if {$winClose == 1} { deactivate unmap }",
"    send client Quit",
"} ; send quitButton addCallback Quit",
"",
"",
"",
"################################################################################",
"# Initialize the GUI.",
"################################################################################",
"",
"proc Initialize args {",
"    global smcTimerId",
"",
"    # 30 sec delay before starting to poll",
"    #set smcTimerId [postTimedCallback smcTimer 30000]",
"",
"    send client setOption rdirname [send rdirValue get string]",
"    send client setOption pdirname [send pdirValue get string]",
"    send client setOption froot    [send rrootValue get string]",
"}",
"",
"",
"#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++",
"#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++",
"#++",
"#++  Connection Status Procedures",
"#++",
"#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++",
"#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++",
"",
"proc conStatUpdate { param old new } {",
"",
"    set host  [lindex $new 0]",
"    set stat  [lindex $new 1]",
"",
"    if { $stat } {",
"	foreach w { con1 con2 con3 } {",
"	    set lab [send $w get label]",
"	    if {[string compare $lab \"none\"] == 0} {",
"		send $w set label $host",
"		send $w set background green",
"		send $w set foreground black",
"		break",
"	    } elseif {[string compare $lab $host] == 0} {",
"		send $w set background green",
"		send $w set foreground black",
"		break",
"	    }",
"	}",
"",
"    } else {",
"	foreach w { con1 con2 con3 } {",
"	    set lab [send $w get label]",
"	    if {[string compare $lab $host] == 0} {",
"		send $w set background red",
"		send $w set foreground yellow",
"		break",
"	    }",
"	}",
"    }",
"} ; send conStat addCallback conStatUpdate",
"",
"",
"proc expStatUpdate { param old new } {",
"",
"    set host  [lindex $new 0]",
"    set stat  [lindex $new 1]",
"",
"    if { $stat } {",
"	foreach w { exp1 exp2 exp3 } {",
"	    set lab [send $w get label]",
"	    if {[string compare $lab \"none\"] == 0} {",
"		send $w set label $host",
"		send $w set background red",
"		send $w set foreground yellow",
"		break",
"	    } elseif {[string compare $lab $host] == 0} {",
"		send $w set background red",
"		send $w set foreground yellow",
"		break",
"	    }",
"	}",
"",
"    } else {",
"	foreach w { exp1 exp2 exp3 } {",
"	    set lab [send $w get label]",
"	    if {[string compare $lab $host] == 0} {",
"		send $w set background green",
"		send $w set foreground black",
"		break",
"	    }",
"	}",
"    }",
"} ; send expStat addCallback expStatUpdate",
"",
"",
"#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++",
"#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++",
"#++",
"#++  RTD Status Procedures",
"#++",
"#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++",
"#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++",
"",
"set	disp_enable	1",
"set	stat_enable	1",
"set	rot_enable	1",
"set	trim_enable	1",
"set	otf_enable	1",
"set	par_enable	1",
"set	lo_gain		1",
"",
"",
"proc rtdStatUpdate { param old new } {",
"",
"    global stat_enable",
"",
"",
"set opt [lindex $new 0]",
"set t1 \"DetName    Mean     Sigma          Min        Max       Z1      Z2\\n\"",
"set t2 \"-------    ----     -----          ---        ---       --      --\\n\\n\"",
"",
"set t1s \"DetName    Z1      Z2\\n\"",
"set t2s \"-------    --      --\\n\\n\"",
"",
"    switch $opt {",
"	sclear	{ if {! $stat_enable} {",
"		      send rtdStats set string $t1s",
"		      send rtdStats append $t2s",
"		   }",
"		}",
"	clear	{  if {$stat_enable} {    ",
"		       send rtdStats set string $t1",
"		       send rtdStats append $t2",
"		   }",
"		}",
"	obsid	{ send obsidVal set label [lindex $new 1]",
"		}",
"	expid	{ send expidVal set label [lindex $new 1]",
"		}",
"	stat	{ send rtdStats append [lindex $new 1]",
"		}",
"    }",
"} ; send rtdStat addCallback rtdStatUpdate",
"",
"",
"proc toggleRTDDisplay { args } {",
"    global disp_enable",
"    set disp_enable [send dispEnable get on]",
"    send client setOption disp_enable [send dispEnable get on]",
"} ; send dispEnable addCallback toggleRTDDisplay",
"",
"proc toggleRTDStats { args } {",
"    global stat_enable",
"    set stat_enable [send statEnable get on]",
"    send client setOption stat_enable [send statEnable get on]",
"} ; send statEnable addCallback toggleRTDStats",
"",
"proc toggleRTDRotate { args } {",
"    global rot_enable",
"    set rot_enable [send rotEnable get on]",
"    send client setOption rot_enable [send rotEnable get on] ",
"} ; send rotEnable addCallback toggleRTDRotate",
"",
"proc toggleRefTrim { args } {",
"    global trim_enable",
"    set trim_enable [send trimEnable get on]",
"    send client setOption trim [send trimEnable get on] ",
"} ; send trimEnable addCallback toggleRefTrim",
"",
"proc toggleParallelDisplay { args } {",
"    global par_enable",
"    set par_enable [send parDisplay get on]",
"    send client setOption par_enable [send parDisplay get on]",
"} ; send parDisplay addCallback toggleParallelDisplay",
"",
"proc toggleLoGain { args } {",
"    global lo_gain",
"    set lo_gain [send loGain get on]",
"    send client setOption lo_gain [send loGain get on]",
"} ; send loGain addCallback toggleLoGain",
"",
"proc toggleOTFCorrect { args } {",
"    global otf_enable",
"    set otf_enable [send otfEnable get on]",
"    send client setOption otf_enable [send otfEnable get on]",
"} ; send otfEnable addCallback toggleOTFCorrect",
"",
"",
"",
"",
"#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++",
"#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++",
"#++",
"#++  SMC Status Procedures",
"#++",
"#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++",
"#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++",
"",
"set smcHosts 	 { }",
"set smcCurHost 	 INDEF",
"set smcTimerId 	 0",
"set smcInterval	 [expr [send pollInterval get string] * 1000]",
"",
"set smcNodeDescr {",
"    {	\"mosaic1dhs-01\"  f.exec { showSMCHost mosaic1dhs-01 } }",
"} ; createMenu smcNodes cnodeVal $smcNodeDescr",
"",
"",
"proc getPInterval { widget mode value } {",
"    send pollInterval set string $value",
"} ; send pollInterval addCallback getPInterval",
"",
"",
"proc smcTimer args {",
"    global smcTimerId smcHosts smcInterval smcNodeDescr",
"",
"    # Reset the SMC stats.  We clear the table at the start of each cycle",
"    # and build the table based on the replies to the Update command.",
"#print \"GUI: In SMCTimer\"",
"    set smcHosts     { }",
"    set smcNodeDescr { }",
"    #createMenu smcNodes cnodeVal $smcNodeDescr",
"    set smcInterval [expr [send pollInterval get string] * 1000]",
"",
"    send client smcUpdate",
"",
"    # Timer id reset when we left the panel.",
"    if {$smcTimerId < 0} {",
"        #set smcTimerId [postTimedCallback smcTimer $smcInterval]",
"	;",
"    } else {",
"	deleteTimedCallback $smcTimerId		# delete old timer",
"        if {[send pollToggle get on]} {",
"            set smcTimerId [postTimedCallback smcTimer $smcInterval]",
"        } else {",
"	    set smcTimerId 0",
"        }",
"    }",
"}; ",
"",
"",
"proc togglePolling { args } {",
"    global smcTimerId",
"    if {$smcTimerId == 0} {",
"        if {[send pollToggle get on]} {	# no timer running, toggle on",
"	    smcTimer",
"	}",
"    } else {",
"	;				# timer running, toggle off next cycle",
"    }",
"}; send pollToggle addCallback togglePolling",
"",
"",
"proc toggleIDListing { args } {",
"    send client setOption idListing [send idToggle get on]",
"    send client smcUpdate",
"}; send idToggle addCallback toggleIDListing",
"",
"",
"proc setSMCValue { param old new } {",
"    set opt [lindex $new 0]",
"    set key [lindex $opt 0]",
"    set val [lindex $opt 1]",
"",
"    switch $key {",
"      ctime	{ send ctimeVal    set label $val }",
"      utime	{ send utimeVal    set label $val }",
"      memKey	{ send memKeyVal   set label $val }",
"      shmid	{ send shmIDVal    set label $val }",
"      size	{ send sizeVal     set label $val }",
"      memUsed	{ send memUseVal   set label $val }",
"      memAvail	{ send memAvailVal set label $val }",
"      numProcs	{ send nprocVal    set label $val }",
"      nsegs	{ send pageUseVal  set label $val }",
"    }",
"} ; send smcVal addCallback setSMCValue",
"",
"",
"proc showSMCHost { host } {",
"    global smcHosts smcNodeDescr smcCurHost",
"",
"    foreach h $smcHosts {",
"",
"        set lhost [lindex $h 0]",
"        if {$lhost == $host} {",
"            set stats [lindex $h 1]",
"            set table [lindex $h 2]",
"",
"	    set smcCurHost $host",
"	    send cnodeVal set label $host",
"",
"	    # Update the segment table.",
"            send segTable setText [format \"<pre>%s</pre>\\n\" $table]",
"",
"	    # Update the stats at the top of the display",
"	    foreach opt $stats {",
"    		set key [lindex $opt 0]",
"    		set val [lindex $opt 1]",
"",
"    		switch $key {",
"      		    ctime     { send ctimeVal    set label [lrange $opt 1 end] }",
"      		    utime     { send utimeVal    set label [lrange $opt 1 end] }",
"      		    cacheFile { send cacheVal    set label $val }",
"      		    memKey    { send memKeyVal   set label $val }",
"      		    shmid     { send shmIDVal    set label $val }",
"      		    size      { send sizeVal     set label $val }",
"      		    memUsed   { send memUseVal   set label $val }",
"      		    memAvail  { send memAvailVal set label $val }",
"      		    numProcs  { send nprocVal    set label $val }",
"      		    nsegs     { send pageUseVal  set label $val }",
"	        }",
"	    }",
"        }",
"    }",
"}",
"",
"",
"proc setSMCText { param old new } {",
"    global smcHosts smcNodeDescr smcCurHost",
"",
"",
"    set tw [send panelTabs get topWidget]",
"    set host  [lindex $new 0]",
"",
"    if {$tw != \"smc_panel\" || $host == \"clear\"} {",
"	set smcHosts { }",
"",
"    } else {",
"        set stats [lindex $new 1]",
"        set table [lindex $new 2]",
"",
"#	set entry [format \"%s  f.exec { showSMCHost %s } \" $host $host]",
"#	lappend smcNodeDescr $entry",
"#	createMenu smcNodes cnodeVal $smcNodeDescr",
"",
"	# If we haven't set a current host yet, do it now.",
"	if {$smcCurHost == \"INDEF\"} {",
"	    send cnodeVal set label $host",
"	    set smcCurHost $host",
"	}",
"",
"	lappend smcHosts [list $host $stats $table]",
"",
"	# If we're looking at the current host, display the table.",
"	showSMCHost $host",
"    }",
"}; send smcStat addCallback setSMCText",
"",
"",
"proc setSMCCount { param old new } {",
"    set host [lindex $new 0]",
"    set count [lindex $new 1]",
"",
"    set l1 [send smcuse1 get label]",
"    set l2 [send smcuse2 get label]",
"",
"    # No label set yet",
"    if { $l1 == \"smcuse1\"  || [lindex $l1 0] == $host } {",
"	send smcuse1 set label [ format \"%s: %d\" $host $count ]",
"    } elseif { $l2 == \"smcuse2\" || [lindex $l2 0] == $host } {",
"	send smcuse2 set label [ format \"%s: %d\" $host $count ]",
"    }",
"",
"}; send smcCount addCallback setSMCCount",
"",
"",
"#send smcCmdFlush  addCallback \"send client smcReset\"",
"send smcCmdClean  addCallback \"send client smcReset\"",
"send smcCmdUpdate addCallback \"send client smcUpdate\"",
"send smcCmdNext   addCallback \"send client smcProcNext\"",
"send smcCmdAll    addCallback \"send client smcProcAll\"",
"",
"",
"",
"#  Optimization routine to disable some status output on panels when the",
"#  user isn't looking at them.  Options like computing pixel statistics ",
"#  for the RTD can slow things down when not needed.",
"",
"proc tabHandler { args } {",
"    global smcTimerId",
"",
"    set tw [send panelTabs get topWidget]",
"",
"#   if {$tw == \"smc_panel\"} {",
"#       if {$smcTimerId <= 0} {",
"#           if {[send pollToggle get on]} {	# no timer running, toggle on",
"#		set smcTimerId 1",
"#        	smcTimer",
"#	    }",
"#	}",
"#   } else { ",
"#	set smcTimerId -1",
"#   } ",
"",
"    # Activate the display options only when the user is looking ",
"    # at the tab.  Otherwise, shut them off to speed up display.",
"    if {$tw == \"rtd_panel\"} {",
"	send client setOption stat_enable [send statEnable get on]",
"    } else {",
"	send client setOption stat_enable 0",
"    }",
"",
"} ; send panelTabs addCallback tabHandler",
"",
"",
"",
"################################################################################",
"#  Procedures used by the disk monitor.",
"################################################################################",
"",
"",
"# Given a directory work backwards through the path until we find a directory",
"# that is a mounted filesystem we can use to get the disk space.",
"",
"proc getDiskUsed { dir args } {",
"    global df_cmd curdir",
"",
"    # Get the percentage used of a particular disk.",
"    set percent -1",
"    set path [ split $dir / ]",
"    set last [ llength $path ]",
"",
"    while { $percent == -1 && $last >= 0 } {",
"        incr last -1",
"        set tdir [ join [lrange $path 0 $last] / ]",
"",
"        catch {",
"            set used [ exec sh -c \"$df_cmd $tdir\" ]",
"            regexp -nocase { ([0-9]+\\%) } $used percent",
"            scan $percent \"%d\" percent",
"	    set last -1				;# break the loop",
"        } err",
"    }",
"",
"    # Set the thermometer.",
"    if { $percent >= 0 } {",
"        setDiskMonitor $percent",
"    }",
"}",
"",
"",
"# Set the disk monitor thermometer.",
"proc setDiskMonitor { val args } {",
"    global curdir",
"",
"    # Set limits and colors.",
"    set safe    75      ; set green     3       ;# static colormap indices",
"    set caution 90      ; set yellow    6",
"    set danger  100     ; set red       2",
"",
"    # Initialize the widget.",
"    send diskuse clearScreen",
"    send diskuse setLogRes 100 1",
"    send diskuse setFillType solid",
"",
"    # Set the label.",
"    send diskuseStr set label [format \"Disk Usage:%3d%%\" $val]",
"",
"    # Set the color based on the usage value and draw the thermo bar.",
"    if { $val < $safe } {",
"        send diskuse setColorIndex $green",
"    } elseif { $val < $caution } {",
"        send diskuse setColorIndex $yellow",
"    } else {",
"        send diskuse setColorIndex $red",
"    }",
"    send diskuse drawPolygon  \"{ {0 0} {$val 0} {$val 1} {0 1} {0 0} }\"",
"    send diskuse setColorIndex 0",
"    send diskuse drawPolygon  \"{ {$val 0} {100 0} {100 1} {$val 1} {$val 0} }\"",
"",
"    if { $val >= 98 } {",
"        Wexec warnShell \"WARNING: Disk Usage is ${val}%\\non disk $curdir\"",
"    }",
"}",
"",
"",
"# Install a timer so we can update the usage between observations.  Update",
"# once every 15 seconds.",
"",
"set diskTimerId 0",
"",
"proc diskMonitorTimer args {",
"    global diskTimerId curdir",
"",
"    getDiskUsed $curdir",
"    if { $diskTimerId > 0 } {",
"	deleteTimedCallback $diskTimerId",
"    }",
"    set diskTimerId [postTimedCallback diskMonitorTimer 15000]",
"} ; set diskTimerId [postTimedCallback diskMonitorTimer 100]",
"",
"",
"",
"",
"#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++",
"#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++",
"#++   RTD Status Info",
"#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++",
"#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++",
"",
"proc setFrame { param old new } {",
"    send dframeButton set label $new",
"} ; send frame addCallback setFrame",
"",
"proc setStdimg { param old new } {",
"    send stdimgButton set label $new",
"} ; send stdimg addCallback setStdimg",
"",
"proc setImtdev { param old new } {",
"    send nodeValue set string $new",
"} ; send imtdev addCallback setImtdev",
"",
"",
"",
"",
"#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++",
"#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++",
"#++   Logfile info box.",
"#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++",
"#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++",
"    ",
"set log_mapped 	0",
"",
"proc logOpen  { args } { ",
"    global log_mapped",
"    send log map",
"    set log_mapped 1",
"} ; send logDone addCallback logDone",
"",
"proc logDone  { args } { ",
"    global log_mapped",
"    send log unmap",
"    set log_mapped 0",
"} ; send logDone addCallback logDone",
"",
"proc logClear { args } { ",
"    send logfile set string \"\"",
"} ; send logClear addCallback logClear",
"",
"proc logAppend { param old new } {",
"    global log_mapped",
"",
"    set from    [ lindex $new 0 ]",
"    set subj    [ lindex $new 1 ]",
"    set msgtext [ lindex $new 2 ]",
"",
"    if { $log_mapped == 1 } {",
"	send logfile append [ format \"%6d %4d %s\\n\" $from $subj $msgtext ]",
"    }",
"",
"} ; send msglog addCallback logAppend",
"",
"",
"#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++",
"#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++",
"#++",
"#++  TCLSHELL.UI -- User Interface definition file for a debug Tcl Shell.",
"#++",
"#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++",
"#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++",
"",
"",
"",
"# ActivateCallbacks ",
"send tclClear   addCallback tclCommandClear",
"send tclDismiss addCallback tclClose",
"send tclEntry   addCallback tclCommand",
"send tclExecute addCallback tclCommandExecute",
"",
"",
"#  Define some TCL debug procedures.",
"",
"# Declare global variables.",
"global	tclMapped",
"",
"# Set global variables.",
"set  tclMapped		0",
"",
"proc tclOpen  args { ",
"    global tclMapped",
"    send tclShell map ",
"    set tclMapped 1",
"}",
"proc tclClose args { ",
"    global tclMapped",
"    send tclShell unmap ",
"    set tclMapped 0",
"}",
"",
"proc tclToggle args {",
"    global tclMapped",
"",
"    if { $tclMapped == 1 } { ",
"	tclClose",
"    } else { 		           ",
"	tclOpen",
"    }",
"} ",
"",
"proc tclCommandClear { widget args } { ",
"    send tclEntry set string \"\" ",
"}",
"",
"proc tclCommandExecute { widget args } { \\",
"        send server [send tclEntry {get string}] ",
"}",
"",
"proc tclCommand { widget mode command args } { ",
"    send server $command ",
"}",
"",
"",
"",
"",
"",
"###############################################",
"# Define procedure for the help panel",
"###############################################",
"set help_up       0",
"",
"# Stuff for keeping track of visited anchors.",
"set links       { 0 }",
"set linkIndex     0",
"set visited(0)  empty",
"",
"proc Help args \\",
"{",
"    global help_up",
"    if {$help_up == 0} {",
"	send client Help",
"    } else {",
"	send help_panel unmap",
"	set help_up 0",
"    } ",
"}",
"",
"proc helpPanel args \\",
"{",
"    global help_up",
"    if {$help_up} {",
"	send help_panel unmap",
"	set help_up 0",
"    } else {",
"	send help_panel map",
"	set help_up 1",
"    }",
"}",
"",
"proc panelHelp args \\",
"{",
"    Help",
"} ; send helpButton addCallback panelHelp",
"",
"proc helpQuit args \\",
"{",
"    global help_up",
"    send help_panel unmap",
"    set help_up 0",
"}; send helpClose addCallback helpQuit",
"",
"proc getHelpText { param old new } \\",
"{",
"    send helpText setText $new",
"    helpPanel",
"}; send help addCallback getHelpText",
"",
"proc anchorSelected {widget cbtype event text href args} \\",
"{",
"    global visited links linkIndex",
"    set anchID [send helpText anchorToId $href]",
"    set visited($href) 1",
"    if {$linkIndex == 0} {",
"	send helpBack setSensitive True",
"	if {[lindex $links 1] != $anchID} {",
"	    set links { 0 }",
"	    send helpForward setSensitive False",
"	}",
"    }",
"    if {$linkIndex > 0 && [lindex $links [expr $linkIndex + 1]] != $anchID} {",
"	set links [lrange $links 0 $linkIndex]",
"    }",
"    if {[lindex $links [expr $linkIndex + 1]] != $anchID} {",
"	lappend links $anchID",
"	incr linkIndex",
"    } else {",
"	send helpForward setSensitive False",
"	incr linkIndex",
"    }",
"    if {$linkIndex == [expr [llength $links] - 1]} {",
"	send helpForward setSensitive False",
"    }",
"    send helpText gotoId $anchID",
"    send helpText retestAnchors",
"}; send helpText addCallback anchorSelected anchor     ",
"",
"proc testAnchor {widget cbtype href} \\",
"{",
"    global visited",
"    return [info exists visited($href)]",
"}; send helpText addCallback testAnchor testAnchor",
"",
"",
"# Callbacks to position forwards and backwards in link list.",
"proc hlpForward args \\",
"{",
"    global links linkIndex",
"    incr linkIndex",
"    if {$linkIndex <= [llength $links]} {",
"	set anchID [lindex $links $linkIndex]",
"	send helpText gotoId $anchID",
"	send helpText retestAnchors",
"	if {$linkIndex == [expr [llength $links] - 1]} {",
"	    send helpForward setSensitive False",
"	    send helpBack setSensitive True",
"	} else {",
"	    send helpBack setSensitive True",
"	}",
"    } else {",
"	incr linkIndex -1",
"    }",
"}; send helpForward addCallback hlpForward",
"       ",
"proc hlpBack args \\",
"{",
"    global links linkIndex",
"    incr linkIndex -1",
"    if {$linkIndex >= 0} {",
"	set anchID [lindex $links $linkIndex]",
"	send helpText gotoId $anchID",
"	send helpText retestAnchors",
"	if {$linkIndex == 0} { send helpBack setSensitive False   }",
"	if {$linkIndex >= 0} { send helpForward setSensitive True }",
"    } else {",
"	incr linkIndex 1",
"    }",
"}; send helpBack addCallback hlpBack",
"",
"proc hlpHome args \\",
"{",
"    global links linkIndex",
"    set links { 0 }",
"    set linkIndex  0",
"    send helpText gotoId 0",
"    send helpForward setSensitive False",
"    send helpBack setSensitive False",
"}; send helpHome addCallback hlpHome",
"",
"",
"proc helpFind args \\",
"{",
"    set phrase  [send hfEntry get string]",
"",
"    if { $phrase != \"\" } {",
"        if {[send helpText searchText $phrase start end forward caseless] > 0} {",
"            set elid [lindex [lindex $start 0] 0]",
"            set id   [max 1 [expr $elid - 10] ]",
"            send helpText gotoId $id",
"            send helpText setSelection $start $end",
"        } else {",
"            send warnText set label \"Search string not found.\"",
"            send warnShell map",
"        }",
"    } else {",
"        send warnText set label \"Warning: No search phrase entered.\"",
"        send warnShell map",
"    }",
"} ; foreach w { hfEntry hfFind } { send $w addCallback helpFind }",
"",
"send hfClear addCallback { send hfEntry set string \"\" }",
"",
"",
"",
"",
"################################################################################",
"# Warning dialog.  This pops up a dialog box with the given warning message,",
"# and executes the given command if the user pushes OK.",
"#",
"# Usage:        Wexec object message [ok_action [cancel_action]]",
"#",
"# The message text is displayed in a popup and the user hits the ok or",
"# cancel button to close the popup.  If an action has been posted for the",
"# button selected then it is sent to the named object.  Only one alert can",
"# be in effect at a time; posting another alert before the first has",
"# completed causes the new alert to override the first.",
"################################################################################",
"",
"set W_object 	 \"warnShell\"",
"set W_ok_cmd 	 \"unmap\"",
"set W_cancel_cmd \"unmap\"",
"",
"proc Wexec {object msg args} \\",
"{",
"    global W_object W_ok_cmd W_cancel_cmd",
"",
"    set W_object $object",
"    set W_ok_cmd [lindex $args 0]",
"    set W_cancel_cmd [lindex $args 1]",
"    send warnText set label $msg",
"    send warnShell map",
"}",
"",
"proc Wbutton {widget args} \\",
"{",
"    global W_object W_ok_cmd W_cancel_cmd",
"",
"    switch $widget {",
"    warnOk      { if [llength $W_ok_cmd] { send $W_object $W_ok_cmd }",
"                }",
"    warnCancel  { if [llength $W_cancel_cmd] { send $W_object $W_cancel_cmd }",
"                }",
"    }",
"    send warnShell unmap",
"}",
"send warnOk     addCallback Wbutton",
"send warnCancel addCallback Wbutton",
"",
"# The parameter \"alert\" is used to forward alerts from the client.",
"proc setAlert {param old new} \\",
"{",
"    Wexec client [lindex $new 0] [lindex $new 1]",
"}; send alert addCallback setAlert",
"",
"",
"",
"",
"################################################################################",
"#  Now that we've done it all, Initialize and start up the GUI.",
"################################################################################",
"activate",
"Initialize",
"",
"",
"",
